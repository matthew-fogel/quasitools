{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Quasitools is a collection of tools for analysing viral quasispecies data. The following tools are currently available in quasitools: aacoverage : builds an amino acid consensus and returns its coverage call aavr : call amino acid mutations for a BAM file and a supplied reference file call codonvar : call codon variants for a BAM file and a supplied reference file call ntvar : call nucleotide variants for a BAM file and a supplied reference file complexity : reports the complexity of a quasispecies using several measures consensus : generate a consensus sequence from a BAM file distance : measures the distance between quasispecies using angular cosine distance dnds : calculates the dn/ds value for each region in a bed file drmutations : identifies amino acid mutations hydra : identify HIV drug resistance mutations in an NGS dataset quality : perform quality control on FASTQ reads Release quasitools 0.7.0 This release provides greater functionality for the complexity tool, including the ability to run on aligned read data and filter out low frequency haplotypes. Resources Website : https://phac-nml.github.io/quasitools/ Installation : https://phac-nml.github.io/quasitools/installation/ GitHub : https://github.com/phac-nml/quasitools","title":"Home"},{"location":"#introduction","text":"Quasitools is a collection of tools for analysing viral quasispecies data. The following tools are currently available in quasitools: aacoverage : builds an amino acid consensus and returns its coverage call aavr : call amino acid mutations for a BAM file and a supplied reference file call codonvar : call codon variants for a BAM file and a supplied reference file call ntvar : call nucleotide variants for a BAM file and a supplied reference file complexity : reports the complexity of a quasispecies using several measures consensus : generate a consensus sequence from a BAM file distance : measures the distance between quasispecies using angular cosine distance dnds : calculates the dn/ds value for each region in a bed file drmutations : identifies amino acid mutations hydra : identify HIV drug resistance mutations in an NGS dataset quality : perform quality control on FASTQ reads","title":"Introduction"},{"location":"#release","text":"quasitools 0.7.0 This release provides greater functionality for the complexity tool, including the ability to run on aligned read data and filter out low frequency haplotypes.","title":"Release"},{"location":"#resources","text":"Website : https://phac-nml.github.io/quasitools/ Installation : https://phac-nml.github.io/quasitools/installation/ GitHub : https://github.com/phac-nml/quasitools","title":"Resources"},{"location":"aacoverage/","text":"Amino Acid Coverage Builds an amino acid census and returns its coverage. Basic Usage quasitools aacoverage [options] BAM file reference file bed file Arguments BAM File A BAM file (.bam) of sequences aligned to a related reference. A BAM index file (.bai) is also required and should be named the same as the BAM file, with the extension instead changed from \".bam\" to \".bai\". Reference File A reference file related to the aligned BAM sequences. The provided reference file must be the same reference file used when producing the BAM and BAM index files. BED File A BED file that specifies the coordinates of genes, with repsect to the provided reference. This BED file must be a BED4+ file. That is, the BED file must contain at least the first 4 BED file columns. Options Output -o, --output FILENAME The file output location of the amino acid coverage. Output The amino acid coverage will be output in CSV format. The output will have one entry per line, with the amino acid position and the coverage at that position. By default, this will be printed to standard output. The user may direct the output to a file by specifying a file name with the -o/--output option. Applications Generating a report of the amino acid coverage, with respect to a referemce, from a BAM alignment file. Example Data The following example data may be used to run the tool: hiv.fasta hiv.bed variant.bam variant.bai Command quasitools aacoverage variant.bam hiv.fasta hiv.bed Output frame: 0 1,0 2,4 3,5 4,9 5,11 6,13 7,15 8,17 9,21 10,22 11,26 12,26 13,28 14,32 15,33 16,37 17,38 18,43 19,44 20,45 21,50 22,54 23,57 (output truncated)","title":"aacoverage"},{"location":"aacoverage/#amino-acid-coverage","text":"Builds an amino acid census and returns its coverage.","title":"Amino Acid Coverage"},{"location":"aacoverage/#basic-usage","text":"quasitools aacoverage [options] BAM file reference file bed file","title":"Basic Usage"},{"location":"aacoverage/#arguments","text":"","title":"Arguments"},{"location":"aacoverage/#bam-file","text":"A BAM file (.bam) of sequences aligned to a related reference. A BAM index file (.bai) is also required and should be named the same as the BAM file, with the extension instead changed from \".bam\" to \".bai\".","title":"BAM File"},{"location":"aacoverage/#reference-file","text":"A reference file related to the aligned BAM sequences. The provided reference file must be the same reference file used when producing the BAM and BAM index files.","title":"Reference File"},{"location":"aacoverage/#bed-file","text":"A BED file that specifies the coordinates of genes, with repsect to the provided reference. This BED file must be a BED4+ file. That is, the BED file must contain at least the first 4 BED file columns.","title":"BED File"},{"location":"aacoverage/#options","text":"","title":"Options"},{"location":"aacoverage/#output","text":"-o, --output FILENAME The file output location of the amino acid coverage.","title":"Output"},{"location":"aacoverage/#output_1","text":"The amino acid coverage will be output in CSV format. The output will have one entry per line, with the amino acid position and the coverage at that position. By default, this will be printed to standard output. The user may direct the output to a file by specifying a file name with the -o/--output option.","title":"Output"},{"location":"aacoverage/#applications","text":"Generating a report of the amino acid coverage, with respect to a referemce, from a BAM alignment file.","title":"Applications"},{"location":"aacoverage/#example","text":"","title":"Example"},{"location":"aacoverage/#data","text":"The following example data may be used to run the tool: hiv.fasta hiv.bed variant.bam variant.bai","title":"Data"},{"location":"aacoverage/#command","text":"quasitools aacoverage variant.bam hiv.fasta hiv.bed","title":"Command"},{"location":"aacoverage/#output_2","text":"frame: 0 1,0 2,4 3,5 4,9 5,11 6,13 7,15 8,17 9,21 10,22 11,26 12,26 13,28 14,32 15,33 16,37 17,38 18,43 19,44 20,45 21,50 22,54 23,57 (output truncated)","title":"Output"},{"location":"aavar/","text":"aavar Call amino acid mutations from a BAM alignment file and a supplied reference file. Please refer to Data Formats for detailed information about the the expected input formats for this tool. Basic Usage quasitools aavar [options] BAM file reference file bed file [variants file] [mutation db] Arguments BAM File A BAM file (.bam) of sequences aligned to a related reference. A BAM index file (.bai) is also required and should be named the same as the BAM file, with the extension instead changed from \".bam\" to \".bai\". Reference File A reference file related to the aligned sequences in the BAM file. The provided reference file must be the same reference file used when producing the BAM and BAM index files. BED File A BED file that specifies the coordinates of genes, with repsect to the provided reference. This BED file must be a BED4+ file and therefore contain at least the first 4 BED file columns. The \"names\" of these genetic regions in the BED4 file must be the same names used in the \"genetic regions\" column of the mutation database. Please refer to Data Formats for more information. Variants File A VCF (Variant Call Format) file format specifying identified variants in the BAM file, with respect to the passed reference file. When this file is provided, the computational running time of the program is improved. This variants file should be generated using the same BAM and reference files passed as parameters to program. The VCF output of call ntvar may be used as input to this program. Mutation Database The mutation database describes specific mutations within the named genetic regions specified previously in the BED4 file. When provided to the tool, the surveillence and drug resistance category information are included in the output mutation annotation. The entries in the \"genetic regions\" colummn of this database must match the \"names\" column of the provided BED4 file. Please refer to Data Formats for more information. Options Minimum Frequency -f, --min_freq FLOAT The minimum observed frequency for a variant to reported. The default frequency is 0.01. Error Rate -e, --error_rate FLOAT This is the expected substitution sequencing error rate. The default value is 0.0021 substitutions per sequenced base. Output -o, --output FILENAME The file output location to write the identified amino acid mutations. Output The amino acid mutations that exceed the minimum frequency threshold will be output in AAVF format. By default, the results will be printed to standard output. The user may direct the output to a file by specifying a file name with the -o / --output option. Examples Data The following example data may be used to run the tool: hiv.fasta variant.bam variant.bai variant.vcf hiv_db.tsv Example: No Database Command quasitools call aavar variant.bam hiv.fasta hiv.bed Output ##reference=hiv.fasta ##source=quasitools:aavar ##fileformat=AAVFv1.0 ##fileDate=20190206 ##INFO= ID=SRVL,Number=.,Type=String,Description= Drug Resistance Surveillance ##INFO= ID=AC,Number=.,Type=String,Description= Alternate Codon ##INFO= ID=CAT,Number=.,Type=String,Description= Drug Resistance Category ##INFO= ID=ACF,Number=.,Type=Float,Description= Alternate Codon Frequency,for each Alternate Codon,in the same order aslisted. ##INFO= ID=RC,Number=1,Type=String,Description= Reference Codon ##FILTER= ID=af0.01,Description= Set if True; alt_freq 0.01 #CHROM GENE POS REF ALT FILTER ALT_FREQ COVERAGE INFO AF033819.3 gag 339 P Q PASS 1.0000 133 SRVL=.;AC=cAa;CAT=.;ACF=1.0000;RC=cca AF033819.3 env 67 N T PASS 1.0000 116 SRVL=.;AC=aCt;CAT=.;ACF=1.0000;RC=aat AF033819.3 gag 441 Y S PASS 1.0000 109 SRVL=.;AC=tCc;CAT=.;ACF=1.0000;RC=tac AF033819.3 pol 141 I S PASS 1.0000 145 SRVL=.;AC=aGt;CAT=.;ACF=1.0000;RC=att AF033819.3 vpu 34 L I PASS 1.0000 118 SRVL=.;AC=Ata;CAT=.;ACF=1.0000;RC=tta AF033819.3 env 302 N Y PASS 1.0000 138 SRVL=.;AC=Tat;CAT=.;ACF=1.0000;RC=aat AF033819.3 gag 3 A P PASS 1.0000 140 SRVL=.;AC=Ccg;CAT=.;ACF=1.0000;RC=gcg AF033819.3 pol 246 Q H PASS 1.0000 139 SRVL=.;AC=caT;CAT=.;ACF=1.0000;RC=caa AF033819.3 gag 230 E D PASS 1.0000 126 SRVL=.;AC=gaT;CAT=.;ACF=1.0000;RC=gaa AF033819.3 pol 96 G E PASS 1.0000 128 SRVL=.;AC=gAa;CAT=.;ACF=1.0000;RC=gga Observe that there is no information under INFO column of the output for SRVL (surveillance) and CAT (drug resistance category). This is because a mutation database was not provided. Example: With Database Command quasitools call aavar variant.bam hiv.fasta hiv.bed variant.vcf hiv_db.tsv Output ##reference=hiv.fasta ##source=quasitools:aavar ##fileformat=AAVFv1.0 ##fileDate=20190206 ##INFO= ID=SRVL,Number=.,Type=String,Description= Drug Resistance Surveillance ##INFO= ID=AC,Number=.,Type=String,Description= Alternate Codon ##INFO= ID=CAT,Number=.,Type=String,Description= Drug Resistance Category ##INFO= ID=ACF,Number=.,Type=Float,Description= Alternate Codon Frequency,for each Alternate Codon,in the same order aslisted. ##INFO= ID=RC,Number=1,Type=String,Description= Reference Codon ##FILTER= ID=af0.01,Description= Set if True; alt_freq 0.01 #CHROM GENE POS REF ALT FILTER ALT_FREQ COVERAGE INFO AF033819.3 gag 339 P Q PASS 1.0000 133 SRVL=.;AC=cAa;CAT=.;ACF=1.0000;RC=cca AF033819.3 env 67 N T PASS 1.0000 116 SRVL=No;AC=aCt;CAT=minor;ACF=1.0000;RC=aat AF033819.3 gag 441 Y S PASS 1.0000 109 SRVL=No;AC=tCc;CAT=minor;ACF=1.0000;RC=tac AF033819.3 pol 141 I S PASS 1.0000 145 SRVL=.;AC=aGt;CAT=.;ACF=1.0000;RC=att AF033819.3 vpu 34 L I PASS 1.0000 118 SRVL=Yes;AC=Ata;CAT=major;ACF=1.0000;RC=tta AF033819.3 env 302 N Y PASS 1.0000 138 SRVL=.;AC=Tat;CAT=.;ACF=1.0000;RC=aat AF033819.3 gag 3 A P PASS 1.0000 140 SRVL=Yes;AC=Ccg;CAT=major;ACF=1.0000;RC=gcg AF033819.3 pol 246 Q H PASS 1.0000 139 SRVL=No;AC=caT;CAT=minor;ACF=1.0000;RC=caa AF033819.3 gag 230 E D PASS 1.0000 126 SRVL=.;AC=gaT;CAT=.;ACF=1.0000;RC=gaa AF033819.3 pol 96 G E PASS 1.0000 128 SRVL=Yes;AC=gAa;CAT=major;ACF=1.0000;RC=gga Observe that under the INFO column of the output, that the SRVL and CAT information is included in the annotation, if the mutation was specified in the mutation database.","title":"call aavr"},{"location":"aavar/#aavar","text":"Call amino acid mutations from a BAM alignment file and a supplied reference file. Please refer to Data Formats for detailed information about the the expected input formats for this tool.","title":"aavar"},{"location":"aavar/#basic-usage","text":"quasitools aavar [options] BAM file reference file bed file [variants file] [mutation db]","title":"Basic Usage"},{"location":"aavar/#arguments","text":"","title":"Arguments"},{"location":"aavar/#bam-file","text":"A BAM file (.bam) of sequences aligned to a related reference. A BAM index file (.bai) is also required and should be named the same as the BAM file, with the extension instead changed from \".bam\" to \".bai\".","title":"BAM File"},{"location":"aavar/#reference-file","text":"A reference file related to the aligned sequences in the BAM file. The provided reference file must be the same reference file used when producing the BAM and BAM index files.","title":"Reference File"},{"location":"aavar/#bed-file","text":"A BED file that specifies the coordinates of genes, with repsect to the provided reference. This BED file must be a BED4+ file and therefore contain at least the first 4 BED file columns. The \"names\" of these genetic regions in the BED4 file must be the same names used in the \"genetic regions\" column of the mutation database. Please refer to Data Formats for more information.","title":"BED File"},{"location":"aavar/#variants-file","text":"A VCF (Variant Call Format) file format specifying identified variants in the BAM file, with respect to the passed reference file. When this file is provided, the computational running time of the program is improved. This variants file should be generated using the same BAM and reference files passed as parameters to program. The VCF output of call ntvar may be used as input to this program.","title":"Variants File"},{"location":"aavar/#mutation-database","text":"The mutation database describes specific mutations within the named genetic regions specified previously in the BED4 file. When provided to the tool, the surveillence and drug resistance category information are included in the output mutation annotation. The entries in the \"genetic regions\" colummn of this database must match the \"names\" column of the provided BED4 file. Please refer to Data Formats for more information.","title":"Mutation Database"},{"location":"aavar/#options","text":"","title":"Options"},{"location":"aavar/#minimum-frequency","text":"-f, --min_freq FLOAT The minimum observed frequency for a variant to reported. The default frequency is 0.01.","title":"Minimum Frequency"},{"location":"aavar/#error-rate","text":"-e, --error_rate FLOAT This is the expected substitution sequencing error rate. The default value is 0.0021 substitutions per sequenced base.","title":"Error Rate"},{"location":"aavar/#output","text":"-o, --output FILENAME The file output location to write the identified amino acid mutations.","title":"Output"},{"location":"aavar/#output_1","text":"The amino acid mutations that exceed the minimum frequency threshold will be output in AAVF format. By default, the results will be printed to standard output. The user may direct the output to a file by specifying a file name with the -o / --output option.","title":"Output"},{"location":"aavar/#examples","text":"","title":"Examples"},{"location":"aavar/#data","text":"The following example data may be used to run the tool: hiv.fasta variant.bam variant.bai variant.vcf hiv_db.tsv","title":"Data"},{"location":"aavar/#example-no-database","text":"","title":"Example: No Database"},{"location":"aavar/#command","text":"quasitools call aavar variant.bam hiv.fasta hiv.bed","title":"Command"},{"location":"aavar/#output_2","text":"##reference=hiv.fasta ##source=quasitools:aavar ##fileformat=AAVFv1.0 ##fileDate=20190206 ##INFO= ID=SRVL,Number=.,Type=String,Description= Drug Resistance Surveillance ##INFO= ID=AC,Number=.,Type=String,Description= Alternate Codon ##INFO= ID=CAT,Number=.,Type=String,Description= Drug Resistance Category ##INFO= ID=ACF,Number=.,Type=Float,Description= Alternate Codon Frequency,for each Alternate Codon,in the same order aslisted. ##INFO= ID=RC,Number=1,Type=String,Description= Reference Codon ##FILTER= ID=af0.01,Description= Set if True; alt_freq 0.01 #CHROM GENE POS REF ALT FILTER ALT_FREQ COVERAGE INFO AF033819.3 gag 339 P Q PASS 1.0000 133 SRVL=.;AC=cAa;CAT=.;ACF=1.0000;RC=cca AF033819.3 env 67 N T PASS 1.0000 116 SRVL=.;AC=aCt;CAT=.;ACF=1.0000;RC=aat AF033819.3 gag 441 Y S PASS 1.0000 109 SRVL=.;AC=tCc;CAT=.;ACF=1.0000;RC=tac AF033819.3 pol 141 I S PASS 1.0000 145 SRVL=.;AC=aGt;CAT=.;ACF=1.0000;RC=att AF033819.3 vpu 34 L I PASS 1.0000 118 SRVL=.;AC=Ata;CAT=.;ACF=1.0000;RC=tta AF033819.3 env 302 N Y PASS 1.0000 138 SRVL=.;AC=Tat;CAT=.;ACF=1.0000;RC=aat AF033819.3 gag 3 A P PASS 1.0000 140 SRVL=.;AC=Ccg;CAT=.;ACF=1.0000;RC=gcg AF033819.3 pol 246 Q H PASS 1.0000 139 SRVL=.;AC=caT;CAT=.;ACF=1.0000;RC=caa AF033819.3 gag 230 E D PASS 1.0000 126 SRVL=.;AC=gaT;CAT=.;ACF=1.0000;RC=gaa AF033819.3 pol 96 G E PASS 1.0000 128 SRVL=.;AC=gAa;CAT=.;ACF=1.0000;RC=gga Observe that there is no information under INFO column of the output for SRVL (surveillance) and CAT (drug resistance category). This is because a mutation database was not provided.","title":"Output"},{"location":"aavar/#example-with-database","text":"","title":"Example: With Database"},{"location":"aavar/#command_1","text":"quasitools call aavar variant.bam hiv.fasta hiv.bed variant.vcf hiv_db.tsv","title":"Command"},{"location":"aavar/#output_3","text":"##reference=hiv.fasta ##source=quasitools:aavar ##fileformat=AAVFv1.0 ##fileDate=20190206 ##INFO= ID=SRVL,Number=.,Type=String,Description= Drug Resistance Surveillance ##INFO= ID=AC,Number=.,Type=String,Description= Alternate Codon ##INFO= ID=CAT,Number=.,Type=String,Description= Drug Resistance Category ##INFO= ID=ACF,Number=.,Type=Float,Description= Alternate Codon Frequency,for each Alternate Codon,in the same order aslisted. ##INFO= ID=RC,Number=1,Type=String,Description= Reference Codon ##FILTER= ID=af0.01,Description= Set if True; alt_freq 0.01 #CHROM GENE POS REF ALT FILTER ALT_FREQ COVERAGE INFO AF033819.3 gag 339 P Q PASS 1.0000 133 SRVL=.;AC=cAa;CAT=.;ACF=1.0000;RC=cca AF033819.3 env 67 N T PASS 1.0000 116 SRVL=No;AC=aCt;CAT=minor;ACF=1.0000;RC=aat AF033819.3 gag 441 Y S PASS 1.0000 109 SRVL=No;AC=tCc;CAT=minor;ACF=1.0000;RC=tac AF033819.3 pol 141 I S PASS 1.0000 145 SRVL=.;AC=aGt;CAT=.;ACF=1.0000;RC=att AF033819.3 vpu 34 L I PASS 1.0000 118 SRVL=Yes;AC=Ata;CAT=major;ACF=1.0000;RC=tta AF033819.3 env 302 N Y PASS 1.0000 138 SRVL=.;AC=Tat;CAT=.;ACF=1.0000;RC=aat AF033819.3 gag 3 A P PASS 1.0000 140 SRVL=Yes;AC=Ccg;CAT=major;ACF=1.0000;RC=gcg AF033819.3 pol 246 Q H PASS 1.0000 139 SRVL=No;AC=caT;CAT=minor;ACF=1.0000;RC=caa AF033819.3 gag 230 E D PASS 1.0000 126 SRVL=.;AC=gaT;CAT=.;ACF=1.0000;RC=gaa AF033819.3 pol 96 G E PASS 1.0000 128 SRVL=Yes;AC=gAa;CAT=major;ACF=1.0000;RC=gga Observe that under the INFO column of the output, that the SRVL and CAT information is included in the annotation, if the mutation was specified in the mutation database.","title":"Output"},{"location":"codonvar/","text":"codonvar Call codon variants for a given BAM alignment file. A report is generated that details nucleotide variants within codons and the resulting amino acid variants. The report indicates whether the nucleotide variants correspond to a synonymous or a non-synonymous mutation. Basic Usage quasitools codonvar [options] BAM file reference file offset bed file Arguments BAM File A BAM file (.bam) of sequences aligned to a related reference. A BAM index file (.bai) is also required and should be named the same as the BAM file, with the extension instead changed from \".bam\" to \".bai\". Reference File A reference file related to the aligned BAM sequences. The provided reference file must be the same reference file used when producing the BAM and BAM index files. Offset An integer to offset the reported positions in the output. This does not change the frame or coordinates of coding sequences in the BED file. It may be useful to provide an offset when providing a gene as a reference and gene products in the BED file, but want to report codon variants with respect to the entire chromosome. In this circumstance, the offset would be the position of the reference gene, with respect to the chromosome on which it resides. BED File A BED file that specifies the coordinates of genes, with repsect to the provided reference. This BED file must be a BED4+ file and therefore contain at least the first 4 BED file columns. The \"names\" of these genetic regions in the BED4 file must be the same names used in the \"genetic regions\" column of the mutation database. Please refer to Data Formats for more information. Mutation Database The mutation database describes specific mutations within the named genetic regions specified previously in the BED4 file. The entries in the \"genetic regions\" colummn of this database must match the \"names\" column of the provided BED4 file. Please refer to Data Formats for more information. Options Error Rate -e, --error_rate FLOAT This is the expected substitution sequencing error rate. The default value is 0.0021 substitutions per sequenced base. Output -o, --output FILENAME The file output location to write the identified amino acid mutations. Example Data variant.bam variant.bai hiv.fasta hiv.bed Command quasitools call codonvar variant.bam hiv.fasta 0 hiv.bed Output #gene,nt position (gene),nt start position,nt end position,ref codon,mutant codon,ref AA,mutant AA,coverage,mutant frequency,mutant type,NS count,S count vpu,5607-5855,5706,5708,tta,Ata,L,I,118,100.00,NS,1.0000,0.0000 nef,8342-8713,8630,8632,ctg,Ttg,L,L,143,100.00,S,0.0000,1.0000 pol,1630-4641,2050,2052,att,aGt,I,S,145,100.00,NS,1.0000,0.0000 pol,1630-4641,2986,2988,gaa,gaG,E,E,107,100.00,S,0.0000,1.0000 pol,1630-4641,2419,2421,ctg,ctC,L,L,143,100.00,S,0.0000,1.0000 pol,1630-4641,1654,1656,cta,ctC,L,L,110,100.00,S,0.0000,1.0000 pol,1630-4641,1915,1917,gga,gAa,G,E,128,100.00,NS,1.0000,0.0000 pol,1630-4641,2365,2367,caa,caT,Q,H,139,100.00,NS,1.0000,0.0000 env,5770-8340,5968,5970,aat,aCt,N,T,116,100.00,NS,1.0000,0.0000 env,5770-8340,6136,6138,acc,acG,T,T,134,100.00,S,0.0000,1.0000 env,5770-8340,7363,7365,gca,gcC,A,A,128,100.00,S,0.0000,1.0000 env,5770-8340,6673,6675,aat,Tat,N,Y,138,100.00,NS,1.0000,0.0000 gag,335-1837,1655,1657,tac,tCc,Y,S,109,100.00,NS,1.0000,0.0000 gag,335-1837,716,718,gtc,gtG,V,V,131,100.00,S,0.0000,1.0000 gag,335-1837,341,343,gcg,Ccg,A,P,140,100.00,NS,1.0000,0.0000 gag,335-1837,1022,1024,gaa,gaT,E,D,126,100.00,NS,1.0000,0.0000 gag,335-1837,1349,1351,cca,cAa,P,Q,133,100.00,NS,1.0000,0.0000","title":"call codonvar"},{"location":"codonvar/#codonvar","text":"Call codon variants for a given BAM alignment file. A report is generated that details nucleotide variants within codons and the resulting amino acid variants. The report indicates whether the nucleotide variants correspond to a synonymous or a non-synonymous mutation.","title":"codonvar"},{"location":"codonvar/#basic-usage","text":"quasitools codonvar [options] BAM file reference file offset bed file","title":"Basic Usage"},{"location":"codonvar/#arguments","text":"","title":"Arguments"},{"location":"codonvar/#bam-file","text":"A BAM file (.bam) of sequences aligned to a related reference. A BAM index file (.bai) is also required and should be named the same as the BAM file, with the extension instead changed from \".bam\" to \".bai\".","title":"BAM File"},{"location":"codonvar/#reference-file","text":"A reference file related to the aligned BAM sequences. The provided reference file must be the same reference file used when producing the BAM and BAM index files.","title":"Reference File"},{"location":"codonvar/#offset","text":"An integer to offset the reported positions in the output. This does not change the frame or coordinates of coding sequences in the BED file. It may be useful to provide an offset when providing a gene as a reference and gene products in the BED file, but want to report codon variants with respect to the entire chromosome. In this circumstance, the offset would be the position of the reference gene, with respect to the chromosome on which it resides.","title":"Offset"},{"location":"codonvar/#bed-file","text":"A BED file that specifies the coordinates of genes, with repsect to the provided reference. This BED file must be a BED4+ file and therefore contain at least the first 4 BED file columns. The \"names\" of these genetic regions in the BED4 file must be the same names used in the \"genetic regions\" column of the mutation database. Please refer to Data Formats for more information.","title":"BED File"},{"location":"codonvar/#mutation-database","text":"The mutation database describes specific mutations within the named genetic regions specified previously in the BED4 file. The entries in the \"genetic regions\" colummn of this database must match the \"names\" column of the provided BED4 file. Please refer to Data Formats for more information.","title":"Mutation Database"},{"location":"codonvar/#options","text":"","title":"Options"},{"location":"codonvar/#error-rate","text":"-e, --error_rate FLOAT This is the expected substitution sequencing error rate. The default value is 0.0021 substitutions per sequenced base.","title":"Error Rate"},{"location":"codonvar/#output","text":"-o, --output FILENAME The file output location to write the identified amino acid mutations.","title":"Output"},{"location":"codonvar/#example","text":"","title":"Example"},{"location":"codonvar/#data","text":"variant.bam variant.bai hiv.fasta hiv.bed","title":"Data"},{"location":"codonvar/#command","text":"quasitools call codonvar variant.bam hiv.fasta 0 hiv.bed","title":"Command"},{"location":"codonvar/#output_1","text":"#gene,nt position (gene),nt start position,nt end position,ref codon,mutant codon,ref AA,mutant AA,coverage,mutant frequency,mutant type,NS count,S count vpu,5607-5855,5706,5708,tta,Ata,L,I,118,100.00,NS,1.0000,0.0000 nef,8342-8713,8630,8632,ctg,Ttg,L,L,143,100.00,S,0.0000,1.0000 pol,1630-4641,2050,2052,att,aGt,I,S,145,100.00,NS,1.0000,0.0000 pol,1630-4641,2986,2988,gaa,gaG,E,E,107,100.00,S,0.0000,1.0000 pol,1630-4641,2419,2421,ctg,ctC,L,L,143,100.00,S,0.0000,1.0000 pol,1630-4641,1654,1656,cta,ctC,L,L,110,100.00,S,0.0000,1.0000 pol,1630-4641,1915,1917,gga,gAa,G,E,128,100.00,NS,1.0000,0.0000 pol,1630-4641,2365,2367,caa,caT,Q,H,139,100.00,NS,1.0000,0.0000 env,5770-8340,5968,5970,aat,aCt,N,T,116,100.00,NS,1.0000,0.0000 env,5770-8340,6136,6138,acc,acG,T,T,134,100.00,S,0.0000,1.0000 env,5770-8340,7363,7365,gca,gcC,A,A,128,100.00,S,0.0000,1.0000 env,5770-8340,6673,6675,aat,Tat,N,Y,138,100.00,NS,1.0000,0.0000 gag,335-1837,1655,1657,tac,tCc,Y,S,109,100.00,NS,1.0000,0.0000 gag,335-1837,716,718,gtc,gtG,V,V,131,100.00,S,0.0000,1.0000 gag,335-1837,341,343,gcg,Ccg,A,P,140,100.00,NS,1.0000,0.0000 gag,335-1837,1022,1024,gaa,gaT,E,D,126,100.00,NS,1.0000,0.0000 gag,335-1837,1349,1351,cca,cAa,P,Q,133,100.00,NS,1.0000,0.0000","title":"Output"},{"location":"complexity/","text":"complexity Reports various measures of viral quasispecies complexity. Basic Usage FASTA Input: quasitools complexity fasta [OPTIONS] FASTA READS FILE BAM Input: quasitools complexity bam FASTA REFERENCE FILE BAM FILE K-MER SIZE [OPTIONS] Arguments FASTA Reads File This input file is only necessary when running the tool in FASTA mode. An aligned FASTA file containing multiple aligned sequences, representing haplotypes of a genomic region from the mutant spectrum of interest. This FASTA file would likely be created using a multiple sequence alignment tool from aligning amplicon sequencing data. FASTA Reference File This input file is only necessary when running the tool in BAM mode. A reference file of the sequence of interest. The BAM file must be generated using this reference file. BAM File This input file is only necessary when running the tool in BAM mode. A BAM file describing the alignments of reads to the same reference provided as input. These reads should be derived from a quasispecies mutant spectrum. This BAM file would likely be created using a read aligner which aligns FASTQ reads to a FASTA reference. k-mer Size This input is only necessary when running the tool in BAM mode. The k -mer size defines the length of the k -mer sequence fragments. A sliding window of this k -mer size is used to scan across the reference genome. The sequences at each sliding window are used to calculate the quasispecies complexity. Options FILTER -f [INTEGER] This option is only available when running the tool in BAM mode. This option allows for a user-defined filter size between 0 and 100. Haplotypes under the filter size will not be used when calculating the quasispecies complexity at a particular position in the genome. OUTPUT FILE -o [USER-DEFINED-FILE-NAME.CSV] This option is availble when running the tool in both BAM and FASTA mode. This option allows users to define an output file location, where the program output will be written in CSV format. Output The quasispecies complexity measures are taken from Gregori, Josep, et al. 2016 . These include the following various indices: Incidence (Entity Level): Number of haplotypes Number of polymorphic sites Number of mutations Abundance (Molecular Level): Shannon entropy Simpson index Gini-Simpson index Hill numbers Functional (Incidence): Minimum mutation frequency (Mf min) Mutation frequency (Mfe) FAD Sample nucleotide diversity Functional (Abundance): Maximum mutation frequency (Mf max) Population nucleotide diversity Applications Assessing the quasispecies complexity of a genomic region. Comparing the quasispecies complexity of multiple genomic regions from the same mutant spectrum. Example: FASTA Reads File Data The following example data may be used to run the tool: aligned.fasta Command quasitools complexity fasta aligned.fasta Output Position,Number of Haplotypes,Haplotype Population,Number of Polymorphic Sites,Number of Mutations,Shannon Entropy,Shannon Entropy Normalized to N,Shannon Entropy Normalized to H,Simpson Index,Gini-Simpson Index,Hill Number #0,HIll Number #1,Hill Number #2,Hill Number #3,Minimum Mutation Frequency,Mutation Frequency,Functional Attribute Diversity,Sample Nucleotide Diversity (Entity),Maximum Mutation Frequency,Population Nucleotide Diversity,Sample Nucleotide Diversity 0,9,30,38,40,1.8774672554524843,0.5520018525167073,0.8544721713101401,0.19111111111111112,0.8088888888888889,9.0,6.536927510444632,5.232558139534883,4.543368996115371,0.013333333333333334,0.05555555555555555,7.379999999999999,0.10249999999999998,0.03866666666666667,0.06682222222222223,0.06912643678160921 Example: BAM File With a Reference FASTA Data The following example data may be used to run the tool: generated.fasta generated.bam generated.bai Command quasitools complexity bam generated.fasta generated.bam 200 Output Position,Number of Haplotypes,Haplotype Population,Number of Polymorphic Sites,Number of Mutations,Shannon Entropy,Shannon Entropy Normalized to N,Shannon Entropy Normalized to H,Simpson Index,Gini-Simpson Index,Hill Number #0,HIll Number #1,Hill Number #2,Hill Number #3,Minimum Mutation Frequency,Mutation Frequency,Functional Attribute Diversity,Sample Nucleotide Diversity (Entity),Maximum Mutation Frequency,Population Nucleotide Diversity,Sample Nucleotide Diversity 0,6,6,6,15,1.7917594692280547,0.9999999999999999,0.9999999999999999,0.16666666666666669,0.8333333333333333,6.0,5.999999999999998,5.999999999999999,6.000000000000001,0.0125,0.01916666666666667,0.7300000000000004,0.02433333333333335,0.019166666666666665,0.020277777777777773,0.02433333333333333","title":"complexity"},{"location":"complexity/#complexity","text":"Reports various measures of viral quasispecies complexity.","title":"complexity"},{"location":"complexity/#basic-usage","text":"FASTA Input: quasitools complexity fasta [OPTIONS] FASTA READS FILE BAM Input: quasitools complexity bam FASTA REFERENCE FILE BAM FILE K-MER SIZE [OPTIONS]","title":"Basic Usage"},{"location":"complexity/#arguments","text":"","title":"Arguments"},{"location":"complexity/#fasta-reads-file","text":"This input file is only necessary when running the tool in FASTA mode. An aligned FASTA file containing multiple aligned sequences, representing haplotypes of a genomic region from the mutant spectrum of interest. This FASTA file would likely be created using a multiple sequence alignment tool from aligning amplicon sequencing data.","title":"FASTA Reads File"},{"location":"complexity/#fasta-reference-file","text":"This input file is only necessary when running the tool in BAM mode. A reference file of the sequence of interest. The BAM file must be generated using this reference file.","title":"FASTA Reference File"},{"location":"complexity/#bam-file","text":"This input file is only necessary when running the tool in BAM mode. A BAM file describing the alignments of reads to the same reference provided as input. These reads should be derived from a quasispecies mutant spectrum. This BAM file would likely be created using a read aligner which aligns FASTQ reads to a FASTA reference.","title":"BAM File"},{"location":"complexity/#k-mer-size","text":"This input is only necessary when running the tool in BAM mode. The k -mer size defines the length of the k -mer sequence fragments. A sliding window of this k -mer size is used to scan across the reference genome. The sequences at each sliding window are used to calculate the quasispecies complexity.","title":"k-mer Size"},{"location":"complexity/#options","text":"","title":"Options"},{"location":"complexity/#filter","text":"-f [INTEGER] This option is only available when running the tool in BAM mode. This option allows for a user-defined filter size between 0 and 100. Haplotypes under the filter size will not be used when calculating the quasispecies complexity at a particular position in the genome.","title":"FILTER"},{"location":"complexity/#output-file","text":"-o [USER-DEFINED-FILE-NAME.CSV] This option is availble when running the tool in both BAM and FASTA mode. This option allows users to define an output file location, where the program output will be written in CSV format.","title":"OUTPUT FILE"},{"location":"complexity/#output","text":"The quasispecies complexity measures are taken from Gregori, Josep, et al. 2016 . These include the following various indices: Incidence (Entity Level): Number of haplotypes Number of polymorphic sites Number of mutations Abundance (Molecular Level): Shannon entropy Simpson index Gini-Simpson index Hill numbers Functional (Incidence): Minimum mutation frequency (Mf min) Mutation frequency (Mfe) FAD Sample nucleotide diversity Functional (Abundance): Maximum mutation frequency (Mf max) Population nucleotide diversity","title":"Output"},{"location":"complexity/#applications","text":"Assessing the quasispecies complexity of a genomic region. Comparing the quasispecies complexity of multiple genomic regions from the same mutant spectrum.","title":"Applications"},{"location":"complexity/#example-fasta-reads-file","text":"","title":"Example: FASTA Reads File"},{"location":"complexity/#data","text":"The following example data may be used to run the tool: aligned.fasta","title":"Data"},{"location":"complexity/#command","text":"quasitools complexity fasta aligned.fasta","title":"Command"},{"location":"complexity/#output_1","text":"Position,Number of Haplotypes,Haplotype Population,Number of Polymorphic Sites,Number of Mutations,Shannon Entropy,Shannon Entropy Normalized to N,Shannon Entropy Normalized to H,Simpson Index,Gini-Simpson Index,Hill Number #0,HIll Number #1,Hill Number #2,Hill Number #3,Minimum Mutation Frequency,Mutation Frequency,Functional Attribute Diversity,Sample Nucleotide Diversity (Entity),Maximum Mutation Frequency,Population Nucleotide Diversity,Sample Nucleotide Diversity 0,9,30,38,40,1.8774672554524843,0.5520018525167073,0.8544721713101401,0.19111111111111112,0.8088888888888889,9.0,6.536927510444632,5.232558139534883,4.543368996115371,0.013333333333333334,0.05555555555555555,7.379999999999999,0.10249999999999998,0.03866666666666667,0.06682222222222223,0.06912643678160921","title":"Output"},{"location":"complexity/#example-bam-file-with-a-reference-fasta","text":"","title":"Example: BAM File With a Reference FASTA"},{"location":"complexity/#data_1","text":"The following example data may be used to run the tool: generated.fasta generated.bam generated.bai","title":"Data"},{"location":"complexity/#command_1","text":"quasitools complexity bam generated.fasta generated.bam 200","title":"Command"},{"location":"complexity/#output_2","text":"Position,Number of Haplotypes,Haplotype Population,Number of Polymorphic Sites,Number of Mutations,Shannon Entropy,Shannon Entropy Normalized to N,Shannon Entropy Normalized to H,Simpson Index,Gini-Simpson Index,Hill Number #0,HIll Number #1,Hill Number #2,Hill Number #3,Minimum Mutation Frequency,Mutation Frequency,Functional Attribute Diversity,Sample Nucleotide Diversity (Entity),Maximum Mutation Frequency,Population Nucleotide Diversity,Sample Nucleotide Diversity 0,6,6,6,15,1.7917594692280547,0.9999999999999999,0.9999999999999999,0.16666666666666669,0.8333333333333333,6.0,5.999999999999998,5.999999999999999,6.000000000000001,0.0125,0.01916666666666667,0.7300000000000004,0.02433333333333335,0.019166666666666665,0.020277777777777773,0.02433333333333333","title":"Output"},{"location":"consensus/","text":"Consensus Generate a consensus sequence from a BAM file. With default settings, a simple majority base rule will be used to build the consensus. However, the user may specify a minimum percentage of abundance for base incorporation into the consensus sequence, which may produce IUPAC codes in the consensus. Basic Usage quasitools consensus [options] BAM file reference file Arguments BAM File A BAM file (.bam) of sequences aligned to a related reference. A BAM index file (.bai) is also required and should be named the same as the BAM file, with the extension instead changed from \".bam\" to \".bai\". Reference File A reference file related to the aligned BAM sequences. The provided reference file must be the same reference file used when producing the BAM and BAM index files. Options Percentage -p, --percentage INTEGER This percentage option causes the consensus tool to operate in one of two distinct modes. When the percentage is set to exactly 100 , then the consensus is generated using by taking the most abundant base at each position. In contrast, when the percentage is less than 100 , then the consensus is generated by comparing the frequency of each base at a position against the treshold. The default value is 100 . These two modes of operation are described in greater detail below. When this percentage is set to exactly 100 , then the most frequent base will be incorporated into the consensus sequence. The incorporated base will be the most abundant base at the position. In the case of a tie, the base will be chosen in reverse alphabetical order. When no base is present (zero coverage, inserstion, only N ), then an ambigious N base will be incorporated. Additionally, insertions that are at least a multiple of 3 (i.e. codon length) will be incorporated. When this percentage is less than 100 , then the tool will determine how many different bases pass the minimum incorporation threshold ( percentage ) at each position. Any bases that exceed this threshold will be incorporated into the consensus sequence at the given position. When multiple bases exceed the minimum threshold, then the base is converted to an ambigious IUPAC base. A table outlining these conversation is found below: Bases Exceeding Treshold Incorporated Base A A C C G G T T AC M AG R AT W CG S CT Y GT K ACG V ACT H AGT D CGT B ACGT N For example, if the percentage is 20 and A has been observed 30% of the time, G has been observed 30% of the time, and T has been observed 40% of the time, then the base incorporated into the consensus will be D . However, when there is zero coverage, or no bases meet the percentage threshold an ambigious N base will be incorporated into the consensus. Insertions will not be inserted into the consensus when run in this mode of operation. ID -i, --id TEXT Specify the default FASTA sequence identifier to be used for sequences without an RG tag. Output -o, --ouput FILENAME The file output location for the generated consensus sequence. Output A consensus sequence on FASTA fortmat will be output to standard out unless specified otherwise. Example Data The following example data may be used to run the tool: variant.bam variant.bai hiv.fasta Command quasitools consensus variant.bam hiv.fasta Output variant_100_AF033819.3 ACTCTGGTAACTAGAGATCCCTCAGACCCATTTAGTCAGTGTGGAAAATCTCTAGCAGTGGCGCCCGAACAGGGACCTGA AAGCGAAAGGGAAACCAGAGGAGCTCTCTCGACGCAGGACTCGGCTTGCTGAAGCGCGCACGGCAAGAGGCGAGGGGCGG CGACTGGTGAGTACGCCAAAAATTTTGACTAGCGGAGGCTAGAAGGAGAGAGATGGGTCCGAGAGCGTCAGTATTAAGCG GGGGAGAATTAGATCGATGGGAAAAAATTCGGTTAAGGCCAGGGGGAAAGAAAAAATATAAATTAAAACATATAGTATGG GCAAGCAGGGAGCTAGAACGATTCGCAGTTAATCCTGGCCTGTTAGAAACATCAGAAGGCTGTAGACAAATACTGGGACA GCTACAACCATCCCTTCAGACAGGATCAGAAGAACTTAGATCATTATATAATACAGTAGCAACCCTCTATTGTGTGCATC (output truncated)","title":"consensus"},{"location":"consensus/#consensus","text":"Generate a consensus sequence from a BAM file. With default settings, a simple majority base rule will be used to build the consensus. However, the user may specify a minimum percentage of abundance for base incorporation into the consensus sequence, which may produce IUPAC codes in the consensus.","title":"Consensus"},{"location":"consensus/#basic-usage","text":"quasitools consensus [options] BAM file reference file","title":"Basic Usage"},{"location":"consensus/#arguments","text":"","title":"Arguments"},{"location":"consensus/#bam-file","text":"A BAM file (.bam) of sequences aligned to a related reference. A BAM index file (.bai) is also required and should be named the same as the BAM file, with the extension instead changed from \".bam\" to \".bai\".","title":"BAM File"},{"location":"consensus/#reference-file","text":"A reference file related to the aligned BAM sequences. The provided reference file must be the same reference file used when producing the BAM and BAM index files.","title":"Reference File"},{"location":"consensus/#options","text":"","title":"Options"},{"location":"consensus/#percentage","text":"-p, --percentage INTEGER This percentage option causes the consensus tool to operate in one of two distinct modes. When the percentage is set to exactly 100 , then the consensus is generated using by taking the most abundant base at each position. In contrast, when the percentage is less than 100 , then the consensus is generated by comparing the frequency of each base at a position against the treshold. The default value is 100 . These two modes of operation are described in greater detail below. When this percentage is set to exactly 100 , then the most frequent base will be incorporated into the consensus sequence. The incorporated base will be the most abundant base at the position. In the case of a tie, the base will be chosen in reverse alphabetical order. When no base is present (zero coverage, inserstion, only N ), then an ambigious N base will be incorporated. Additionally, insertions that are at least a multiple of 3 (i.e. codon length) will be incorporated. When this percentage is less than 100 , then the tool will determine how many different bases pass the minimum incorporation threshold ( percentage ) at each position. Any bases that exceed this threshold will be incorporated into the consensus sequence at the given position. When multiple bases exceed the minimum threshold, then the base is converted to an ambigious IUPAC base. A table outlining these conversation is found below: Bases Exceeding Treshold Incorporated Base A A C C G G T T AC M AG R AT W CG S CT Y GT K ACG V ACT H AGT D CGT B ACGT N For example, if the percentage is 20 and A has been observed 30% of the time, G has been observed 30% of the time, and T has been observed 40% of the time, then the base incorporated into the consensus will be D . However, when there is zero coverage, or no bases meet the percentage threshold an ambigious N base will be incorporated into the consensus. Insertions will not be inserted into the consensus when run in this mode of operation.","title":"Percentage"},{"location":"consensus/#id","text":"-i, --id TEXT Specify the default FASTA sequence identifier to be used for sequences without an RG tag.","title":"ID"},{"location":"consensus/#output","text":"-o, --ouput FILENAME The file output location for the generated consensus sequence.","title":"Output"},{"location":"consensus/#output_1","text":"A consensus sequence on FASTA fortmat will be output to standard out unless specified otherwise.","title":"Output"},{"location":"consensus/#example","text":"","title":"Example"},{"location":"consensus/#data","text":"The following example data may be used to run the tool: variant.bam variant.bai hiv.fasta","title":"Data"},{"location":"consensus/#command","text":"quasitools consensus variant.bam hiv.fasta","title":"Command"},{"location":"consensus/#output_2","text":"variant_100_AF033819.3 ACTCTGGTAACTAGAGATCCCTCAGACCCATTTAGTCAGTGTGGAAAATCTCTAGCAGTGGCGCCCGAACAGGGACCTGA AAGCGAAAGGGAAACCAGAGGAGCTCTCTCGACGCAGGACTCGGCTTGCTGAAGCGCGCACGGCAAGAGGCGAGGGGCGG CGACTGGTGAGTACGCCAAAAATTTTGACTAGCGGAGGCTAGAAGGAGAGAGATGGGTCCGAGAGCGTCAGTATTAAGCG GGGGAGAATTAGATCGATGGGAAAAAATTCGGTTAAGGCCAGGGGGAAAGAAAAAATATAAATTAAAACATATAGTATGG GCAAGCAGGGAGCTAGAACGATTCGCAGTTAATCCTGGCCTGTTAGAAACATCAGAAGGCTGTAGACAAATACTGGGACA GCTACAACCATCCCTTCAGACAGGATCAGAAGAACTTAGATCATTATATAATACAGTAGCAACCCTCTATTGTGTGCATC (output truncated)","title":"Output"},{"location":"contact/","text":"Contact Eric Enns : eric.enns@canada.ca","title":"Contact"},{"location":"contact/#contact","text":"Eric Enns : eric.enns@canada.ca","title":"Contact"},{"location":"distance/","text":"Distance Measures and reports the distance between multiple read pileups from multiple quasispecies samples, aligned to the same genomic region. This tool determines the cosine relatedness between viral quasispecies, reporting either angular cosine distance or cosine similarity as measures of relatedness. These measures of relatedness should be understood as approximations for evolutionary distance. The software represents quasispecies pileup data as vectors and measures the cosine angle between every pair of vectors. This has the benefit of comparing the relative composition of the quasispecies and is robust against widely varying degrees of coverage. This method does not reduce the quasipecies data into a consensus vector and therefore can capture more nuanced differences between two quasispecies pileups. The software can also normalize the pileup vectors to prevent bias of relative coverage within a single pileup. Basic Usage quasitools distance [options] reference ( BAM inputs )+ Arguments BAM File A BAM file (.bam) of sequences aligned to a related reference. This tool requires at least two BAM files. However, there is no uppoer limit. A BAM index file (.bai) is also required for each BAM input and each BAM index file should be named the same as its corresponding BAM file, with the extension instead changed from \".bam\" to \".bai\". Each BAM file must be aligned to the same reference genome. Reference File A reference file related to all of the aligned BAM sequence files. The provided reference file must be the same reference file used when producing all of the BAM and BAM index files. Options Normalize -n, --normalize / -dn, --dont_normalize Whether or not to normalize read count data so that counts at each position sum to one. This is useful if one region of the reference has more coverage depth than another region. Normalization will ensure each base position will contribute equally to the distance measurement. Normalization is done by dividing base read counts (A, C, T, G) inside every 4-tuple by the sum of the read counts inside the same tuple. Output Distance -od, --output_distance / -os, --output_similarity Either output an angular distance matrix (by default) or output a cosine similarity matrix. Please be aware that cosine similarity is not a metric. Start Position -s, --startpos INTEGER Sets the start base position of the reference to use in the distance or similarity calculation. The start position is one-indexed [1, n]. End Position -e, --endpos INTEGER Sets the end base position of the reference to use in the distance or similarity calculation. The end position is one-indexed [1, n]. Output -o, --output FILENAME The file output location to write the quasispecies distance or similarity matrix in CSV format. Truncate -t, --truncate Ignores congiguous start and end pileup regions with no coverage. Remove No Coverage -r, --remove_no_coverage Remove all regions of the pileup with no coverage from the distance calculations. Keep No Coverage -k, --keep_no_coverage Do not remove regions of the pileup with no coverage from the distance calculations. Help --help Show a help message and exit. Output A distance matrix with the distances between all pairs of quasispecies pileups will be written to standard output. The user may also have the matrix written to a file by specifying the location with the -o command. Applications Generating a distance matrix between inputs for the purpose of clustering. Example Data The following example data may be used to run the tool: hiv.fasta variant.bam variant.bai variant2.bam variant2.bai variant3.bam variant3.bai Command quasitools distance hiv.fasta variant.bam variant2.bam variant3.bam Output Using file hiv.fasta as reference Reading input from file(s) variant.bam Reading input from file(s) variant2.bam Reading input from file(s) variant3.bam Constructed pileup from reference. The pileup covers 9181 positions before modifications. The start position is 1. The end position is 9181. The pileup covers 9181 positions after selecting range between original pileup positions 1 and 9181. Truncating all positions with no coverage. 1 positions were truncated on the left. 1 positions were truncated on the right. 2 positions were removed in total from the pileup. Outputting an angular cosine distance matrix. Quasispecies,variant.bam,variant2.bam,variant3.bam variant.bam,0.00000000,0.06414799,0.07023195 variant2.bam,0.06414799,0.00000000,0.07760542 variant3.bam,0.07023195,0.07760542,0.00000000 Complete!","title":"distance"},{"location":"distance/#distance","text":"Measures and reports the distance between multiple read pileups from multiple quasispecies samples, aligned to the same genomic region. This tool determines the cosine relatedness between viral quasispecies, reporting either angular cosine distance or cosine similarity as measures of relatedness. These measures of relatedness should be understood as approximations for evolutionary distance. The software represents quasispecies pileup data as vectors and measures the cosine angle between every pair of vectors. This has the benefit of comparing the relative composition of the quasispecies and is robust against widely varying degrees of coverage. This method does not reduce the quasipecies data into a consensus vector and therefore can capture more nuanced differences between two quasispecies pileups. The software can also normalize the pileup vectors to prevent bias of relative coverage within a single pileup.","title":"Distance"},{"location":"distance/#basic-usage","text":"quasitools distance [options] reference ( BAM inputs )+","title":"Basic Usage"},{"location":"distance/#arguments","text":"","title":"Arguments"},{"location":"distance/#bam-file","text":"A BAM file (.bam) of sequences aligned to a related reference. This tool requires at least two BAM files. However, there is no uppoer limit. A BAM index file (.bai) is also required for each BAM input and each BAM index file should be named the same as its corresponding BAM file, with the extension instead changed from \".bam\" to \".bai\". Each BAM file must be aligned to the same reference genome.","title":"BAM File"},{"location":"distance/#reference-file","text":"A reference file related to all of the aligned BAM sequence files. The provided reference file must be the same reference file used when producing all of the BAM and BAM index files.","title":"Reference File"},{"location":"distance/#options","text":"","title":"Options"},{"location":"distance/#normalize","text":"-n, --normalize / -dn, --dont_normalize Whether or not to normalize read count data so that counts at each position sum to one. This is useful if one region of the reference has more coverage depth than another region. Normalization will ensure each base position will contribute equally to the distance measurement. Normalization is done by dividing base read counts (A, C, T, G) inside every 4-tuple by the sum of the read counts inside the same tuple.","title":"Normalize"},{"location":"distance/#output-distance","text":"-od, --output_distance / -os, --output_similarity Either output an angular distance matrix (by default) or output a cosine similarity matrix. Please be aware that cosine similarity is not a metric.","title":"Output Distance"},{"location":"distance/#start-position","text":"-s, --startpos INTEGER Sets the start base position of the reference to use in the distance or similarity calculation. The start position is one-indexed [1, n].","title":"Start Position"},{"location":"distance/#end-position","text":"-e, --endpos INTEGER Sets the end base position of the reference to use in the distance or similarity calculation. The end position is one-indexed [1, n].","title":"End Position"},{"location":"distance/#output","text":"-o, --output FILENAME The file output location to write the quasispecies distance or similarity matrix in CSV format.","title":"Output"},{"location":"distance/#truncate","text":"-t, --truncate Ignores congiguous start and end pileup regions with no coverage.","title":"Truncate"},{"location":"distance/#remove-no-coverage","text":"-r, --remove_no_coverage Remove all regions of the pileup with no coverage from the distance calculations.","title":"Remove No Coverage"},{"location":"distance/#keep-no-coverage","text":"-k, --keep_no_coverage Do not remove regions of the pileup with no coverage from the distance calculations.","title":"Keep No Coverage"},{"location":"distance/#help","text":"--help Show a help message and exit.","title":"Help"},{"location":"distance/#output_1","text":"A distance matrix with the distances between all pairs of quasispecies pileups will be written to standard output. The user may also have the matrix written to a file by specifying the location with the -o command.","title":"Output"},{"location":"distance/#applications","text":"Generating a distance matrix between inputs for the purpose of clustering.","title":"Applications"},{"location":"distance/#example","text":"","title":"Example"},{"location":"distance/#data","text":"The following example data may be used to run the tool: hiv.fasta variant.bam variant.bai variant2.bam variant2.bai variant3.bam variant3.bai","title":"Data"},{"location":"distance/#command","text":"quasitools distance hiv.fasta variant.bam variant2.bam variant3.bam","title":"Command"},{"location":"distance/#output_2","text":"Using file hiv.fasta as reference Reading input from file(s) variant.bam Reading input from file(s) variant2.bam Reading input from file(s) variant3.bam Constructed pileup from reference. The pileup covers 9181 positions before modifications. The start position is 1. The end position is 9181. The pileup covers 9181 positions after selecting range between original pileup positions 1 and 9181. Truncating all positions with no coverage. 1 positions were truncated on the left. 1 positions were truncated on the right. 2 positions were removed in total from the pileup. Outputting an angular cosine distance matrix. Quasispecies,variant.bam,variant2.bam,variant3.bam variant.bam,0.00000000,0.06414799,0.07023195 variant2.bam,0.06414799,0.00000000,0.07760542 variant3.bam,0.07023195,0.07760542,0.00000000 Complete!","title":"Output"},{"location":"dnds/","text":"dNdS Determines the dN/dS ratio for each codon variant in a supplied csv file (codon variants). The dN/dS ratio is the ratio between the number of nonsynonymous substitutions per non-synonymous site to the number of synonymous substitutions per synonymous site. The reported ratio is calculated by observing by first observing what proportion of nonsynonymous and synonymous sites have mutations, pN and pS. However, pN and pS are calculated with consideration for many reads are covering the same mutation sites. pN and pS are then converted to dN and dS using the Jukes-Cantor correction, which estimates the expected proportion of changes between two sequences (unobservable), based on our observed proportions (pN and pS). The corrected Jukes-Cantor rates will be higher, because the expectation is that over time, multiple mutations will have happened at the same site and this information is lost in our observed proportions; a slightly higher mutation rate (dN and dS) would have been required to observe our proportions (pN and pS). This dN/dS ratio can be used as an indicator of evolutionary pressure acting on a codon. For more information about the dN/dS calculation and how to interpret the ratio, please view Morelli et al. 2013 and Nei and Gojobori 1986 . Basic Usage quasitools dnds [options] codon variants csv reference file offset Arguments Codon Variants CSV The codon variants CSV file should be taken directly from the output of call codonvar and provided as input when running this tool. For more information about this format, please refer to Data Formats . Reference File A reference file to compare the codon variants against. The provided reference file must be the same reference file used when producing the codon variants CSV file. Offset An integer to offset the reported positions in the output. This does not change the frame or coordinates of coding sequences in the BED file. It may be useful to provide an offset when providing a gene as a reference and gene products in the BED file, but want to report codon variants with respect to the entire chromosome. In this circumstance, the offset would be the position of the reference gene, with respect to the chromosome on which it resides. Options Output -o, --output FILENAME The file output location to write the dN/dS ratios. Example Data hiv.fasta variant_codonvar.csv Command quasitools dnds variant_codonvar.csv hiv.fasta 0 Output #gene,pn,ps,pn_sites,ps_sites,dn/ds pol,0.4345,1.5000,3,3,N/A env,0.3750,1.0000,2,2,N/A gag,0.4375,1.0000,4,1,N/A","title":"dnds"},{"location":"dnds/#dnds","text":"Determines the dN/dS ratio for each codon variant in a supplied csv file (codon variants). The dN/dS ratio is the ratio between the number of nonsynonymous substitutions per non-synonymous site to the number of synonymous substitutions per synonymous site. The reported ratio is calculated by observing by first observing what proportion of nonsynonymous and synonymous sites have mutations, pN and pS. However, pN and pS are calculated with consideration for many reads are covering the same mutation sites. pN and pS are then converted to dN and dS using the Jukes-Cantor correction, which estimates the expected proportion of changes between two sequences (unobservable), based on our observed proportions (pN and pS). The corrected Jukes-Cantor rates will be higher, because the expectation is that over time, multiple mutations will have happened at the same site and this information is lost in our observed proportions; a slightly higher mutation rate (dN and dS) would have been required to observe our proportions (pN and pS). This dN/dS ratio can be used as an indicator of evolutionary pressure acting on a codon. For more information about the dN/dS calculation and how to interpret the ratio, please view Morelli et al. 2013 and Nei and Gojobori 1986 .","title":"dNdS"},{"location":"dnds/#basic-usage","text":"quasitools dnds [options] codon variants csv reference file offset","title":"Basic Usage"},{"location":"dnds/#arguments","text":"","title":"Arguments"},{"location":"dnds/#codon-variants-csv","text":"The codon variants CSV file should be taken directly from the output of call codonvar and provided as input when running this tool. For more information about this format, please refer to Data Formats .","title":"Codon Variants CSV"},{"location":"dnds/#reference-file","text":"A reference file to compare the codon variants against. The provided reference file must be the same reference file used when producing the codon variants CSV file.","title":"Reference File"},{"location":"dnds/#offset","text":"An integer to offset the reported positions in the output. This does not change the frame or coordinates of coding sequences in the BED file. It may be useful to provide an offset when providing a gene as a reference and gene products in the BED file, but want to report codon variants with respect to the entire chromosome. In this circumstance, the offset would be the position of the reference gene, with respect to the chromosome on which it resides.","title":"Offset"},{"location":"dnds/#options","text":"","title":"Options"},{"location":"dnds/#output","text":"-o, --output FILENAME The file output location to write the dN/dS ratios.","title":"Output"},{"location":"dnds/#example","text":"","title":"Example"},{"location":"dnds/#data","text":"hiv.fasta variant_codonvar.csv","title":"Data"},{"location":"dnds/#command","text":"quasitools dnds variant_codonvar.csv hiv.fasta 0","title":"Command"},{"location":"dnds/#output_1","text":"#gene,pn,ps,pn_sites,ps_sites,dn/ds pol,0.4345,1.5000,3,3,N/A env,0.3750,1.0000,2,2,N/A gag,0.4375,1.0000,4,1,N/A","title":"Output"},{"location":"drmutations/","text":"Drug Resistance Mutations Generates a report detailing the drug resistant mutations found. This tool identifies which nucleotide mutations, identified in the VCF file, have resulted in a noteworthy amino acid mutation, as specified by the mutation database. Please refer to Data Formats for detailed information about the the expected input formats for this tool. Basic Usage quasitools drmutations [options] BAM file reference file variants file bed file mutation db Arguments BAM File A BAM file (.bam) of sequences aligned to a related reference. A BAM index file (.bai) is also required and should be named the same as the BAM file, with the extension instead changed from \".bam\" to \".bai\". Reference File A reference file related to the aligned sequences in the BAM file. The provided reference file must be the same reference file used when producing the BAM and BAM index files. Variants File A VCF-formated file containing information about nucleotide variants in the reads with respect to an aligned to the provided reference. The read alignment information is taken from the provided BAM file. Only mutations which PASS the VCF filters will be considered when running the tool. Additionally, a VCF file may be created using quasitools call ntvar . BED File A BED file that specifies the coordinates of genes, with repsect to the provided reference. This BED file must be a BED4+ file and therefore contain at least the first 4 BED file columns. The \"names\" of these genetic regions in the BED4 file must be the same names used in the \"genetic regions\" column of the mutation database. Please refer to Data Formats for more information. Mutation Database The mutation database describes specific mutations within the named genetic regions specified previously in the BED4 file. When provided to the tool. The entries in the \"genetic regions\" colummn of this database must match the \"names\" column of the provided BED4 file. Please refer to Data Formats for more information. Options Reporting Threshold -t, --reporting_threshold INTEGER The minimum number of observations required in the read data (BAM file) for an entry to be reported in the drug resistance report. Mutations with a number of observations less than this will not be reported. The default value is 1. Output -o, --output FILENAME The file output location to write the identified drug resistant mutations. Example Data variant.bam variant.bai hiv.fasta variant.vcf hiv.bed hiv_db.tsv Command quasitools drmutations variant.bam hiv.fasta variant.vcf hiv.bed hiv_db.tsv Output Chromosome,Gene,Category,Surveillance,Wildtype,Position,Mutation,Mutation Frequency,Coverage AF033819.3,gag,major,Yes,A,3,P,100.00,140 AF033819.3,gag,minor,No,Y,441,S,100.00,109 AF033819.3,pol,major,Yes,G,96,E,100.00,128 AF033819.3,pol,minor,No,Q,246,H,100.00,139 AF033819.3,vpu,major,Yes,L,34,I,100.00,118 AF033819.3,env,minor,No,N,67,T,100.00,116","title":"drmutations"},{"location":"drmutations/#drug-resistance-mutations","text":"Generates a report detailing the drug resistant mutations found. This tool identifies which nucleotide mutations, identified in the VCF file, have resulted in a noteworthy amino acid mutation, as specified by the mutation database. Please refer to Data Formats for detailed information about the the expected input formats for this tool.","title":"Drug Resistance Mutations"},{"location":"drmutations/#basic-usage","text":"quasitools drmutations [options] BAM file reference file variants file bed file mutation db","title":"Basic Usage"},{"location":"drmutations/#arguments","text":"","title":"Arguments"},{"location":"drmutations/#bam-file","text":"A BAM file (.bam) of sequences aligned to a related reference. A BAM index file (.bai) is also required and should be named the same as the BAM file, with the extension instead changed from \".bam\" to \".bai\".","title":"BAM File"},{"location":"drmutations/#reference-file","text":"A reference file related to the aligned sequences in the BAM file. The provided reference file must be the same reference file used when producing the BAM and BAM index files.","title":"Reference File"},{"location":"drmutations/#variants-file","text":"A VCF-formated file containing information about nucleotide variants in the reads with respect to an aligned to the provided reference. The read alignment information is taken from the provided BAM file. Only mutations which PASS the VCF filters will be considered when running the tool. Additionally, a VCF file may be created using quasitools call ntvar .","title":"Variants File"},{"location":"drmutations/#bed-file","text":"A BED file that specifies the coordinates of genes, with repsect to the provided reference. This BED file must be a BED4+ file and therefore contain at least the first 4 BED file columns. The \"names\" of these genetic regions in the BED4 file must be the same names used in the \"genetic regions\" column of the mutation database. Please refer to Data Formats for more information.","title":"BED File"},{"location":"drmutations/#mutation-database","text":"The mutation database describes specific mutations within the named genetic regions specified previously in the BED4 file. When provided to the tool. The entries in the \"genetic regions\" colummn of this database must match the \"names\" column of the provided BED4 file. Please refer to Data Formats for more information.","title":"Mutation Database"},{"location":"drmutations/#options","text":"","title":"Options"},{"location":"drmutations/#reporting-threshold","text":"-t, --reporting_threshold INTEGER The minimum number of observations required in the read data (BAM file) for an entry to be reported in the drug resistance report. Mutations with a number of observations less than this will not be reported. The default value is 1.","title":"Reporting Threshold"},{"location":"drmutations/#output","text":"-o, --output FILENAME The file output location to write the identified drug resistant mutations.","title":"Output"},{"location":"drmutations/#example","text":"","title":"Example"},{"location":"drmutations/#data","text":"variant.bam variant.bai hiv.fasta variant.vcf hiv.bed hiv_db.tsv","title":"Data"},{"location":"drmutations/#command","text":"quasitools drmutations variant.bam hiv.fasta variant.vcf hiv.bed hiv_db.tsv","title":"Command"},{"location":"drmutations/#output_1","text":"Chromosome,Gene,Category,Surveillance,Wildtype,Position,Mutation,Mutation Frequency,Coverage AF033819.3,gag,major,Yes,A,3,P,100.00,140 AF033819.3,gag,minor,No,Y,441,S,100.00,109 AF033819.3,pol,major,Yes,G,96,E,100.00,128 AF033819.3,pol,minor,No,Q,246,H,100.00,139 AF033819.3,vpu,major,Yes,L,34,I,100.00,118 AF033819.3,env,minor,No,N,67,T,100.00,116","title":"Output"},{"location":"formats/","text":"Data Formats This resource provides a detailed description of the various data formats used by quasitools, either as input or output, and their relationship to each other. In general, the data inputs usually must be consistent with each other. If you change one of the inputs, it is possible that some of the other inputs will need to change as well. Overview The following is a summary of the formats used by quasitools: Format Description Reads A FASTQ file containing sequencing reads. Reference A FASTA reference of either a gene, chromosome, or genome. BAM Specifies sequence alignments between the FASTA reference and FASTQ reads. BAI Indexes the BAM file for faster processing. BED4 Specifies the coordinates of coding sequences in the reference. Mutation Database Specifies meaningful amino acid mutations within coding sequences. Codon Variants CSV Specifies nucleotide variants within codons and resulting amino acid mutations. VCF Specifies observed nucleotide variants and related information. AAVF Specifies observed amino acid variants and related information. Relationships The following is a summary of the relationships between quasitools inputs: Input Input Relationship BAM Reads The BAM file describes the alignment of reads to a reference. BAM Reference The BAM file describes the alignment of reads to a reference. BAM BAI The BAM index (BAI) file must be created from the BAM file. BED4 Reference The BED4 file describes coding sequences on the reference. BED Mutation Database The BED \"name\" column must be consistent with the MutationDB \"coding sequences\" column. Reads Most tools in quasitools do not operated directly on reads and instead require BAM alignment files, which must be created manually by the user. Please see the BAM format section for more information. Reference The reference file must be in FASTA format . When providing a BAM file, BAM index file (BAI), and a reference file together to the same program within quasitools, the BAM file must have been generated from an alignment with the reference and the BAM index file generated from the BAM file. BAM A BAM file (.bam) is the binary version of a SAM file. A SAM (Sequence Alignment/Map) file is a tab-delimited text file that specifies sequence alignments. SAM files are often converted into BAM files to reduce storage space and allow faster processing. Within quasitools, BAM files are used to provide information about how sequencing reads aligned to a reference file. A BAM index file (.bai) is also required by quasitools and should be named the same as the BAM file, with the extension instead changed from \".bam\" to \".bai\". When running quasitools, it is important to ensure that the BAM file, BAM index file, and reference file are consistent with each other. The BAM file should be generated from an alignment against the reference and the BAM index file should be generated from the BAM file. BAM alignment files may be generated using read or sequence alignment software, such as Bowtie2 . If your sequence alignment software does not output a BAI file, you may use samtools to index your BAM file. BED4 A BED file specifies the coordinates of coding sequences, with repsect to sequences within a FASTA reference. The FASTA sequences are larger sequences, such a chromosomes or genes. The specified coding sequences are smaller sequences within the FASTA sequences. These small sequences within FASTA sequences may be genes or gene products. However, the should not contain non-coding sequences. The coordinates of the coding sequences must be specified in 0-based nucleotide coordinates and the length of each coding sequence must be divisible by three. The BED files used with quasitools must be BED4+ files and therefore must contain at least the first 4 BED file columns. It is very likely that these BED4 files will need to be manually created with knowledge of the locations of coding sequences in the reference. It is very important that the names of these coding sequences are the same names used in the coding sequences column of the mutation database, if the user is providing both files as inputs to a tool. The format of the BED files expected by quasitools is as follows: [identifier] [start] [end] [name] There must only be one record per line in the BED4 file. The items in each record are specified as follows: Item Description Values identifier The sequence identifier of the FASTA sequence within the FASTA reference file. string start The starting nucleotide coordinate of the coding sequence. integer end The ending nucleotide coordinate of the coding sequence. integer name The name of the coding sequence. string Example: Genes Witin a Chromsome Reference File (FASTA) chromosome1 ACGTACGT ... chromesome2 GGAATTCC ... BED4 File chromosome1 300 599 gene1 chromosome1 900 1199 gene2 chromosome2 300 599 gene3 Observe that chromosome1 and chromosome2 are the names of contigs in a reference FASTA file. Our BED4 file specifies three genes within the reference file. gene1 and gene2 reside on the chromosome1 contig and gene3 resides on the chromosome2 contig. Example: Gene Products Witin a Gene Reference File (FASTA) gene1 ACGTACGT ... BED4 File gene1 300 599 product1 gene1 900 1199 product2 Observe that our reference file specifics one contig, gene1 , which corresponds to a gene. The coding sequences specific in the BED4 file are instead gene products: product1 and product2 . Example: Gene Products Witin a Chromosome Reference File (FASTA) chromosome1 ACGTACGT ... chromesome2 GGAATTCC ... BED4 File chromosome1 300 399 product1 chromosome1 900 999 product2 chromosome2 300 399 product3 Observe that chromosome1 and chromosome2 are the names of contigs in a reference FASTA file. Our BED4 file specifies three coding sequences which are gene products (assumed to be within genes). product1 and product2 reside on chromosome1 and product3 resides on chromosome2 . Mutation Database The mutation database describes specific mutations within the named coding sequences specified previously in the BED4 file. It is used to report animo acid mutations that the user has identified. The mutation database is represented as a specifically formated TSV (tab separated values) file. The mutation database format is as follows: [coding sequence] [wildtype] [position] [mutation] [category] [surveillance] [comment] Item Description Values coding sequence The name of the coding sequence (CDS or gene product). string wildtype The amino acid of wildtype. character position The position of the amino acid within the coding sequence. integer mutation The amino acid of the muation. character category A categorization of the mutation. string surveillance Whether or not the mutation is part of a surveillance program. string comment A user-provided comment about the mutation. string In this format, there is one mutation entry per line in the file. Each item of every entry is separated by tabs. A line may be a comment if the very first character of the line is a # character. Please note that the position is the amino acid position within that particular coding sequence, in amino acid coordinates. It is very important that the values of the \"coding sequence\" column are the same names used in the \"name\" column of the BED4 file, if the user is providing both files as inputs to a tool. Every name that appears in the coding sequence column must also appear in the name column of the BED4 file. However, not every name in the BED4 file must appear under the coding sequence column in the mutation database. It is very likely that these mutation database files will need to be manually created with knowledge of the locations of mutations within the coding sequences specified in the BED file. Example: Mutations Within a Gene Mutation Database #genetic region wildtype position mutation category surveillance comment gene1 M 10 F major Yes comment1 gene1 K 20 I minor No comment2 gene2 W 5 V major No comment3 BED4 File chromosome1 300 599 gene1 chromosome1 900 1199 gene2 chromosome2 300 599 gene3 Observe that the all names in the first column of the mutation database ( gene1 , gene2 ) appear in the last column of the BED4 file. However, not every named coding sequence in the BED4 ( gene3 ) has to appear in the mutation database coding sequence column. Codon Variants CSV The codon variants CSV file is consistent with the standard CSV format. The file describes nucleotide variants within codons and their resulting amino acid variants. It also clarifies whether the nucleotide variants are synonymous or a non-synonymous mutations. The codon variants CSV file has the following comment header: #gene,nt position (gene),nt start position,nt end position,ref codon,mutant codon,ref AA,mutant AA,coverage,mutant frequency,mutant type,NS count,S count The items on each line correspond to the following information: Position Name Description 0 gene The name of the coding region. 1 nt position (gene) The start and end nucleotide positions of the gene which contains the codon. 2 nt start position The start nucleotide position of the codon. 3 nt end position The end nucleotide position of the codon. 4 ref codon The codon in the reference. 5 mutant codon The mutant codon in the data. 6 ref AA The corresponding amino acid in the reference. 7 mutant AA The corresponding amino acid in the mutant. 8 coverage The coverage of the codon. 9 mutant frequency The observed frequency of the mutant codon. 10 mutant type Whether or not the mutation is synonymous (S) or nonsynonymous (NS). 11 NS count The expected number of nonsynonymous sites in the codon. A number between [0, 3]. 12 S count The expected number of synonymous sites in the codon. A number between [0, 3]. Please refer to Nei and Gojobori 1986 for more information about how to calculate NS count and S count . VCF The VCF format used within quasitools is consistent with the standard VCF format. However, quasitools uses custom values in the FILTER and INFO columns. FILTER Name Meaning dp100 This variant was filtered because the coverage depth was less than 100. q30 This variant was filtered because the quality of the variant was less than 30. ac5 This variant was filtered because the variant was observed less than 5 times. Of particular interest is the q30 flag. This flag is set when the estimated quality of the variant is less than 30. quasitools calculates the probability of a variant being legitimate using the Poisson cumulative distribution function. In this framework, \u03bb is the expected number of errors at a particular position (the coverage depth of that position multiplied by the error rate). In order for the variant to accepted as a real mutation, the probability of the observed variant being caused entirely by errors must be sufficiently low. In other words, at least some of the observed variant was probably caused by at least one real mutation. In order for the probability to be sufficiently low, it must be less than Q30 (1 in 1000 chance). When performing this probability calculation, we assume the worst case scenario: all expected substution errors at a particular position are the same nucleotide as the variant being tested, rather than being evenly distributed evenly across all possible substitions. INFO Name Meaning DP The total coverage depth of the pileup at this position. AC The number of times this particular variants was observed in the pileup at this position. AF The frequency of this particular variants was observed in the pileup at this position. AAVF AAVF is a text file format, inspired by the Variant Call Format (VCF). It contains meta-information lines, a head line, and then data lines each containing information about a position in a gene within a genome. Please refer to the AAVF documentation for more information.","title":"Data Formats"},{"location":"formats/#data-formats","text":"This resource provides a detailed description of the various data formats used by quasitools, either as input or output, and their relationship to each other. In general, the data inputs usually must be consistent with each other. If you change one of the inputs, it is possible that some of the other inputs will need to change as well.","title":"Data Formats"},{"location":"formats/#overview","text":"The following is a summary of the formats used by quasitools: Format Description Reads A FASTQ file containing sequencing reads. Reference A FASTA reference of either a gene, chromosome, or genome. BAM Specifies sequence alignments between the FASTA reference and FASTQ reads. BAI Indexes the BAM file for faster processing. BED4 Specifies the coordinates of coding sequences in the reference. Mutation Database Specifies meaningful amino acid mutations within coding sequences. Codon Variants CSV Specifies nucleotide variants within codons and resulting amino acid mutations. VCF Specifies observed nucleotide variants and related information. AAVF Specifies observed amino acid variants and related information.","title":"Overview"},{"location":"formats/#relationships","text":"The following is a summary of the relationships between quasitools inputs: Input Input Relationship BAM Reads The BAM file describes the alignment of reads to a reference. BAM Reference The BAM file describes the alignment of reads to a reference. BAM BAI The BAM index (BAI) file must be created from the BAM file. BED4 Reference The BED4 file describes coding sequences on the reference. BED Mutation Database The BED \"name\" column must be consistent with the MutationDB \"coding sequences\" column.","title":"Relationships"},{"location":"formats/#reads","text":"Most tools in quasitools do not operated directly on reads and instead require BAM alignment files, which must be created manually by the user. Please see the BAM format section for more information.","title":"Reads"},{"location":"formats/#reference","text":"The reference file must be in FASTA format . When providing a BAM file, BAM index file (BAI), and a reference file together to the same program within quasitools, the BAM file must have been generated from an alignment with the reference and the BAM index file generated from the BAM file.","title":"Reference"},{"location":"formats/#bam","text":"A BAM file (.bam) is the binary version of a SAM file. A SAM (Sequence Alignment/Map) file is a tab-delimited text file that specifies sequence alignments. SAM files are often converted into BAM files to reduce storage space and allow faster processing. Within quasitools, BAM files are used to provide information about how sequencing reads aligned to a reference file. A BAM index file (.bai) is also required by quasitools and should be named the same as the BAM file, with the extension instead changed from \".bam\" to \".bai\". When running quasitools, it is important to ensure that the BAM file, BAM index file, and reference file are consistent with each other. The BAM file should be generated from an alignment against the reference and the BAM index file should be generated from the BAM file. BAM alignment files may be generated using read or sequence alignment software, such as Bowtie2 . If your sequence alignment software does not output a BAI file, you may use samtools to index your BAM file.","title":"BAM"},{"location":"formats/#bed4","text":"A BED file specifies the coordinates of coding sequences, with repsect to sequences within a FASTA reference. The FASTA sequences are larger sequences, such a chromosomes or genes. The specified coding sequences are smaller sequences within the FASTA sequences. These small sequences within FASTA sequences may be genes or gene products. However, the should not contain non-coding sequences. The coordinates of the coding sequences must be specified in 0-based nucleotide coordinates and the length of each coding sequence must be divisible by three. The BED files used with quasitools must be BED4+ files and therefore must contain at least the first 4 BED file columns. It is very likely that these BED4 files will need to be manually created with knowledge of the locations of coding sequences in the reference. It is very important that the names of these coding sequences are the same names used in the coding sequences column of the mutation database, if the user is providing both files as inputs to a tool. The format of the BED files expected by quasitools is as follows: [identifier] [start] [end] [name] There must only be one record per line in the BED4 file. The items in each record are specified as follows: Item Description Values identifier The sequence identifier of the FASTA sequence within the FASTA reference file. string start The starting nucleotide coordinate of the coding sequence. integer end The ending nucleotide coordinate of the coding sequence. integer name The name of the coding sequence. string","title":"BED4"},{"location":"formats/#example-genes-witin-a-chromsome","text":"Reference File (FASTA) chromosome1 ACGTACGT ... chromesome2 GGAATTCC ... BED4 File chromosome1 300 599 gene1 chromosome1 900 1199 gene2 chromosome2 300 599 gene3 Observe that chromosome1 and chromosome2 are the names of contigs in a reference FASTA file. Our BED4 file specifies three genes within the reference file. gene1 and gene2 reside on the chromosome1 contig and gene3 resides on the chromosome2 contig.","title":"Example: Genes Witin a Chromsome"},{"location":"formats/#example-gene-products-witin-a-gene","text":"Reference File (FASTA) gene1 ACGTACGT ... BED4 File gene1 300 599 product1 gene1 900 1199 product2 Observe that our reference file specifics one contig, gene1 , which corresponds to a gene. The coding sequences specific in the BED4 file are instead gene products: product1 and product2 .","title":"Example: Gene Products Witin a Gene"},{"location":"formats/#example-gene-products-witin-a-chromosome","text":"Reference File (FASTA) chromosome1 ACGTACGT ... chromesome2 GGAATTCC ... BED4 File chromosome1 300 399 product1 chromosome1 900 999 product2 chromosome2 300 399 product3 Observe that chromosome1 and chromosome2 are the names of contigs in a reference FASTA file. Our BED4 file specifies three coding sequences which are gene products (assumed to be within genes). product1 and product2 reside on chromosome1 and product3 resides on chromosome2 .","title":"Example: Gene Products Witin a Chromosome"},{"location":"formats/#mutation-database","text":"The mutation database describes specific mutations within the named coding sequences specified previously in the BED4 file. It is used to report animo acid mutations that the user has identified. The mutation database is represented as a specifically formated TSV (tab separated values) file. The mutation database format is as follows: [coding sequence] [wildtype] [position] [mutation] [category] [surveillance] [comment] Item Description Values coding sequence The name of the coding sequence (CDS or gene product). string wildtype The amino acid of wildtype. character position The position of the amino acid within the coding sequence. integer mutation The amino acid of the muation. character category A categorization of the mutation. string surveillance Whether or not the mutation is part of a surveillance program. string comment A user-provided comment about the mutation. string In this format, there is one mutation entry per line in the file. Each item of every entry is separated by tabs. A line may be a comment if the very first character of the line is a # character. Please note that the position is the amino acid position within that particular coding sequence, in amino acid coordinates. It is very important that the values of the \"coding sequence\" column are the same names used in the \"name\" column of the BED4 file, if the user is providing both files as inputs to a tool. Every name that appears in the coding sequence column must also appear in the name column of the BED4 file. However, not every name in the BED4 file must appear under the coding sequence column in the mutation database. It is very likely that these mutation database files will need to be manually created with knowledge of the locations of mutations within the coding sequences specified in the BED file.","title":"Mutation Database"},{"location":"formats/#example-mutations-within-a-gene","text":"Mutation Database #genetic region wildtype position mutation category surveillance comment gene1 M 10 F major Yes comment1 gene1 K 20 I minor No comment2 gene2 W 5 V major No comment3 BED4 File chromosome1 300 599 gene1 chromosome1 900 1199 gene2 chromosome2 300 599 gene3 Observe that the all names in the first column of the mutation database ( gene1 , gene2 ) appear in the last column of the BED4 file. However, not every named coding sequence in the BED4 ( gene3 ) has to appear in the mutation database coding sequence column.","title":"Example: Mutations Within a Gene"},{"location":"formats/#codon-variants-csv","text":"The codon variants CSV file is consistent with the standard CSV format. The file describes nucleotide variants within codons and their resulting amino acid variants. It also clarifies whether the nucleotide variants are synonymous or a non-synonymous mutations. The codon variants CSV file has the following comment header: #gene,nt position (gene),nt start position,nt end position,ref codon,mutant codon,ref AA,mutant AA,coverage,mutant frequency,mutant type,NS count,S count The items on each line correspond to the following information: Position Name Description 0 gene The name of the coding region. 1 nt position (gene) The start and end nucleotide positions of the gene which contains the codon. 2 nt start position The start nucleotide position of the codon. 3 nt end position The end nucleotide position of the codon. 4 ref codon The codon in the reference. 5 mutant codon The mutant codon in the data. 6 ref AA The corresponding amino acid in the reference. 7 mutant AA The corresponding amino acid in the mutant. 8 coverage The coverage of the codon. 9 mutant frequency The observed frequency of the mutant codon. 10 mutant type Whether or not the mutation is synonymous (S) or nonsynonymous (NS). 11 NS count The expected number of nonsynonymous sites in the codon. A number between [0, 3]. 12 S count The expected number of synonymous sites in the codon. A number between [0, 3]. Please refer to Nei and Gojobori 1986 for more information about how to calculate NS count and S count .","title":"Codon Variants CSV"},{"location":"formats/#vcf","text":"The VCF format used within quasitools is consistent with the standard VCF format. However, quasitools uses custom values in the FILTER and INFO columns.","title":"VCF"},{"location":"formats/#filter","text":"Name Meaning dp100 This variant was filtered because the coverage depth was less than 100. q30 This variant was filtered because the quality of the variant was less than 30. ac5 This variant was filtered because the variant was observed less than 5 times. Of particular interest is the q30 flag. This flag is set when the estimated quality of the variant is less than 30. quasitools calculates the probability of a variant being legitimate using the Poisson cumulative distribution function. In this framework, \u03bb is the expected number of errors at a particular position (the coverage depth of that position multiplied by the error rate). In order for the variant to accepted as a real mutation, the probability of the observed variant being caused entirely by errors must be sufficiently low. In other words, at least some of the observed variant was probably caused by at least one real mutation. In order for the probability to be sufficiently low, it must be less than Q30 (1 in 1000 chance). When performing this probability calculation, we assume the worst case scenario: all expected substution errors at a particular position are the same nucleotide as the variant being tested, rather than being evenly distributed evenly across all possible substitions.","title":"FILTER"},{"location":"formats/#info","text":"Name Meaning DP The total coverage depth of the pileup at this position. AC The number of times this particular variants was observed in the pileup at this position. AF The frequency of this particular variants was observed in the pileup at this position.","title":"INFO"},{"location":"formats/#aavf","text":"AAVF is a text file format, inspired by the Variant Call Format (VCF). It contains meta-information lines, a head line, and then data lines each containing information about a position in a gene within a genome. Please refer to the AAVF documentation for more information.","title":"AAVF"},{"location":"hydra/","text":"HyDRA HyDRA is an annotated reference-based bioinformatics pipeline, which analyzes next-generation sequencing data for genotyping HIV-1 drug resistance mutation. It utilizes an annotated HXB2 sequence for reference mapping by Bowtie2, and stringent data quality assurance and variant calling to identify HIV drug resistant (HIVDR) associated mutations based on the Stanford HIV Drug Resistance Database and the 2009 WHO list for Sruveillance of Transmitted HIVDR. All HIVDR mutations found in the pol gene; protease (PR), reverse transcriptase (RT), and integrase (IN) are reported according to classifications outlined in the Stanford Surveillance Drug Resistance Mutation list . Basic Usage quasitools hydra [OPTIONS] FORWARD READS [REVERSE READS] Arguments Forward Reads The forward or single-end FASTQ-format reads. HyDRA will attempt to identify known drug resistant mutations in these reads. Reverse Reads This parameter is optional. If provided, these reads will be assumed to be paired with the provided forward reads and HyDRA will attempt to identify known drug resistant mutations in both sets of reads. Options Output -o, --output DIRECTORY The location of the output directory, which will contain several files created from HyDRA's operation, including any identified drug resistant mutations. Mutation Database -m, --mutation_db FILE The mutation database describes specific mutations within the named genetic regions specified previously in the BED4 file. When provided to the tool. The entries in the \"genetic regions\" colummn of this database must match the \"names\" column of the provided BED4 file. Please refer to Data Formats for more information. Reporting Threshold -rt, --reporting_threshold INTEGER The minimum number of observations required in the read data (FASTQ file) for an entry to be reported in the drug resistance report. Mutations with a number of observations less than this will not be reported. The default value is 1. Generate Consensus -gc, --generate_consensus When this flag is set, the consensus sequence of the provided reads will be reported in the HyDRA output. Consensus Percentage -cp, --consensus_pct INTEGER The minimum percentage of observations for an observation to be incorporated into the consensus. This option must be used with the -gc/--generate_consensus flag turned. This option causes the consensus construction to operate in one of two distinct modes. When the percentage is set to exactly 100 , then the consensus is generated using by taking the most abundant base at each position. In contrast, when the percentage is less than 100 , then the consensus is generated by comparing the frequency of each base at a position against the treshold. The default value is 100 . These two modes of operation are described in greater detail within the description for quasitools consensus . Quiet -q, --quiet This flag is used to suppress all standard output throughout the pipeline. However, this does not affect any file generation. Trim Reads -tr, --trim_reads When this flag is enabled, the pipeline will iteratively trim the ends of reads until they either meet filter values or become too short. If trimmed reads become too short, they will be discarded. When this flag is not enabled, the pipeline will remove reads which do not meet filter values. Mask Reads -mr, --mask_reads This option will mask low quality regions with \"N\" if they are below the minimum read quality threshold. This option and N-filtering cannot be enabled simultaneously. Minimum Read Quality -rq, --min_read_qual INTEGER When read masking is enabled, this parameter is the minimum quality that a position must have in a read must have. If below this threshold, the position will be masked as an N . Length Cutoff -lc, --length_cutoff INTEGER Reads which fall short of the specified length will be filtered out. Mean or Median Score -me, --median / -mn, --mean This determines whether the pipeline will use a mean or median (default) score as a cutoff for read filtering. Score Cutoff -sc, --score_cutoff INTEGER Reads that have a median or mean quality score (depending on the score type specified) less than the score cutoff value will be filtered out. Filter Ns -n, --ns If enabled, the pipeline will discard any reads that contain N characters. Error Rate -e, --error_rate FLOAT The estimated substitution sequencing error rate for the sequencing platform. Minimum Variant Quality -vq, --min_variant_qual INTEGER Minimum quality for an amino acid variant to be included in the produced AAVF ( Amino Acid Variant Format ) file. This minimum will affect which amino acid variants are reported. Minimum Depth -md, --min_dp INTEGER Minimum required read depth for observed nucleotide variants included for processing in the pipeline. Minimum Allele Count -ma, --min_ac INTEGER The minimum required allele count for observed nucleotide variants to be included for processing in the pipeline. Minimum Frequency -mf, --min_freq FLOAT The minimum required frequency for observed amino acid variants to be included for processing in the pipeline. ID -i, --id TEXT This is used to specifiy a FASTA sequence identifier to be used in the consensus report output. Output The output directory location will default to the current directory and will be called data/ . It will include the following output files: align.bam align.bam.bai consensus.fasta coverage_file.csv dr_report.csv filtered.fastq hydra.vcf mutation_report.aavf stats.txt Example Data The following example data may be used to run the tool: variant.fastq Command quasitools hydra variant.fastq -o output Output Standard Output # Performing quality control on reads... # Mapping reads... # Loading read mappings... # Identifying variants... # Masking filtered variants... # Building amino acid census... # Finding amino acid mutations... # Writing drug resistant mutation report... mutation_report.aavf ##reference=hxb2_pol.fas ##source=quasitools:hydra ##fileformat=AAVFv1.0 ##fileDate=20190215 ##INFO= ID=SRVL,Number=.,Type=String,Description= Drug Resistance Surveillance ##INFO= ID=AC,Number=.,Type=String,Description= Alternate Codon ##INFO= ID=CAT,Number=.,Type=String,Description= Drug Resistance Category ##INFO= ID=ACF,Number=.,Type=Float,Description= Alternate Codon Frequency,for each Alternate Codon,in the same order aslisted. ##INFO= ID=RC,Number=1,Type=String,Description= Reference Codon ##FILTER= ID=af0.01,Description= Set if True; alt_freq 0.01 #CHROM GENE POS REF ALT FILTER ALT_FREQ COVERAGE INFO hxb2_pol PR 85 I S PASS 1.0000 144 SRVL=.;AC=aGt;CAT=.;ACF=1.0000;RC=att hxb2_pol RT 91 Q H PASS 1.0000 131 SRVL=.;AC=caT;CAT=.;ACF=1.0000;RC=caa hxb2_pol PR 40 G E PASS 1.0000 122 SRVL=.;AC=gAa;CAT=.;ACF=1.0000;RC=gga","title":"hydra"},{"location":"hydra/#hydra","text":"HyDRA is an annotated reference-based bioinformatics pipeline, which analyzes next-generation sequencing data for genotyping HIV-1 drug resistance mutation. It utilizes an annotated HXB2 sequence for reference mapping by Bowtie2, and stringent data quality assurance and variant calling to identify HIV drug resistant (HIVDR) associated mutations based on the Stanford HIV Drug Resistance Database and the 2009 WHO list for Sruveillance of Transmitted HIVDR. All HIVDR mutations found in the pol gene; protease (PR), reverse transcriptase (RT), and integrase (IN) are reported according to classifications outlined in the Stanford Surveillance Drug Resistance Mutation list .","title":"HyDRA"},{"location":"hydra/#basic-usage","text":"quasitools hydra [OPTIONS] FORWARD READS [REVERSE READS]","title":"Basic Usage"},{"location":"hydra/#arguments","text":"","title":"Arguments"},{"location":"hydra/#forward-reads","text":"The forward or single-end FASTQ-format reads. HyDRA will attempt to identify known drug resistant mutations in these reads.","title":"Forward Reads"},{"location":"hydra/#reverse-reads","text":"This parameter is optional. If provided, these reads will be assumed to be paired with the provided forward reads and HyDRA will attempt to identify known drug resistant mutations in both sets of reads.","title":"Reverse Reads"},{"location":"hydra/#options","text":"","title":"Options"},{"location":"hydra/#output","text":"-o, --output DIRECTORY The location of the output directory, which will contain several files created from HyDRA's operation, including any identified drug resistant mutations.","title":"Output"},{"location":"hydra/#mutation-database","text":"-m, --mutation_db FILE The mutation database describes specific mutations within the named genetic regions specified previously in the BED4 file. When provided to the tool. The entries in the \"genetic regions\" colummn of this database must match the \"names\" column of the provided BED4 file. Please refer to Data Formats for more information.","title":"Mutation Database"},{"location":"hydra/#reporting-threshold","text":"-rt, --reporting_threshold INTEGER The minimum number of observations required in the read data (FASTQ file) for an entry to be reported in the drug resistance report. Mutations with a number of observations less than this will not be reported. The default value is 1.","title":"Reporting Threshold"},{"location":"hydra/#generate-consensus","text":"-gc, --generate_consensus When this flag is set, the consensus sequence of the provided reads will be reported in the HyDRA output.","title":"Generate Consensus"},{"location":"hydra/#consensus-percentage","text":"-cp, --consensus_pct INTEGER The minimum percentage of observations for an observation to be incorporated into the consensus. This option must be used with the -gc/--generate_consensus flag turned. This option causes the consensus construction to operate in one of two distinct modes. When the percentage is set to exactly 100 , then the consensus is generated using by taking the most abundant base at each position. In contrast, when the percentage is less than 100 , then the consensus is generated by comparing the frequency of each base at a position against the treshold. The default value is 100 . These two modes of operation are described in greater detail within the description for quasitools consensus .","title":"Consensus Percentage"},{"location":"hydra/#quiet","text":"-q, --quiet This flag is used to suppress all standard output throughout the pipeline. However, this does not affect any file generation.","title":"Quiet"},{"location":"hydra/#trim-reads","text":"-tr, --trim_reads When this flag is enabled, the pipeline will iteratively trim the ends of reads until they either meet filter values or become too short. If trimmed reads become too short, they will be discarded. When this flag is not enabled, the pipeline will remove reads which do not meet filter values.","title":"Trim Reads"},{"location":"hydra/#mask-reads","text":"-mr, --mask_reads This option will mask low quality regions with \"N\" if they are below the minimum read quality threshold. This option and N-filtering cannot be enabled simultaneously.","title":"Mask Reads"},{"location":"hydra/#minimum-read-quality","text":"-rq, --min_read_qual INTEGER When read masking is enabled, this parameter is the minimum quality that a position must have in a read must have. If below this threshold, the position will be masked as an N .","title":"Minimum Read Quality"},{"location":"hydra/#length-cutoff","text":"-lc, --length_cutoff INTEGER Reads which fall short of the specified length will be filtered out.","title":"Length Cutoff"},{"location":"hydra/#mean-or-median-score","text":"-me, --median / -mn, --mean This determines whether the pipeline will use a mean or median (default) score as a cutoff for read filtering.","title":"Mean or Median Score"},{"location":"hydra/#score-cutoff","text":"-sc, --score_cutoff INTEGER Reads that have a median or mean quality score (depending on the score type specified) less than the score cutoff value will be filtered out.","title":"Score Cutoff"},{"location":"hydra/#filter-ns","text":"-n, --ns If enabled, the pipeline will discard any reads that contain N characters.","title":"Filter Ns"},{"location":"hydra/#error-rate","text":"-e, --error_rate FLOAT The estimated substitution sequencing error rate for the sequencing platform.","title":"Error Rate"},{"location":"hydra/#minimum-variant-quality","text":"-vq, --min_variant_qual INTEGER Minimum quality for an amino acid variant to be included in the produced AAVF ( Amino Acid Variant Format ) file. This minimum will affect which amino acid variants are reported.","title":"Minimum Variant Quality"},{"location":"hydra/#minimum-depth","text":"-md, --min_dp INTEGER Minimum required read depth for observed nucleotide variants included for processing in the pipeline.","title":"Minimum Depth"},{"location":"hydra/#minimum-allele-count","text":"-ma, --min_ac INTEGER The minimum required allele count for observed nucleotide variants to be included for processing in the pipeline.","title":"Minimum Allele Count"},{"location":"hydra/#minimum-frequency","text":"-mf, --min_freq FLOAT The minimum required frequency for observed amino acid variants to be included for processing in the pipeline.","title":"Minimum Frequency"},{"location":"hydra/#id","text":"-i, --id TEXT This is used to specifiy a FASTA sequence identifier to be used in the consensus report output.","title":"ID"},{"location":"hydra/#output_1","text":"The output directory location will default to the current directory and will be called data/ . It will include the following output files: align.bam align.bam.bai consensus.fasta coverage_file.csv dr_report.csv filtered.fastq hydra.vcf mutation_report.aavf stats.txt","title":"Output"},{"location":"hydra/#example","text":"","title":"Example"},{"location":"hydra/#data","text":"The following example data may be used to run the tool: variant.fastq","title":"Data"},{"location":"hydra/#command","text":"quasitools hydra variant.fastq -o output","title":"Command"},{"location":"hydra/#output_2","text":"Standard Output # Performing quality control on reads... # Mapping reads... # Loading read mappings... # Identifying variants... # Masking filtered variants... # Building amino acid census... # Finding amino acid mutations... # Writing drug resistant mutation report... mutation_report.aavf ##reference=hxb2_pol.fas ##source=quasitools:hydra ##fileformat=AAVFv1.0 ##fileDate=20190215 ##INFO= ID=SRVL,Number=.,Type=String,Description= Drug Resistance Surveillance ##INFO= ID=AC,Number=.,Type=String,Description= Alternate Codon ##INFO= ID=CAT,Number=.,Type=String,Description= Drug Resistance Category ##INFO= ID=ACF,Number=.,Type=Float,Description= Alternate Codon Frequency,for each Alternate Codon,in the same order aslisted. ##INFO= ID=RC,Number=1,Type=String,Description= Reference Codon ##FILTER= ID=af0.01,Description= Set if True; alt_freq 0.01 #CHROM GENE POS REF ALT FILTER ALT_FREQ COVERAGE INFO hxb2_pol PR 85 I S PASS 1.0000 144 SRVL=.;AC=aGt;CAT=.;ACF=1.0000;RC=att hxb2_pol RT 91 Q H PASS 1.0000 131 SRVL=.;AC=caT;CAT=.;ACF=1.0000;RC=caa hxb2_pol PR 40 G E PASS 1.0000 122 SRVL=.;AC=gAa;CAT=.;ACF=1.0000;RC=gga","title":"Output"},{"location":"installation/","text":"Installation Conda Conda is an open source package management system and environment management system that allows users to install software quickly and easily on a variety of operating systems. The simpliest way to install quasitools is with Conda. Install quasitools from Bioconda with Conda ( installation instructions ). If this is your first time installing software with Bioconda, then you will need to add the appropriate Conda channels for the first time: conda config --add channels defaults conda config --add channels conda-forge conda config --add channels bioconda Installing quasitools with Conda: conda install quasitools If everything was successful, you should be able to verify your installation by running quasitools --help and see quasitool's help message. Galaxy When installing quasitools into an instance of Galaxy, please install quasitools from the main Galaxy toolshed .","title":"Installation"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installation/#conda","text":"Conda is an open source package management system and environment management system that allows users to install software quickly and easily on a variety of operating systems. The simpliest way to install quasitools is with Conda. Install quasitools from Bioconda with Conda ( installation instructions ). If this is your first time installing software with Bioconda, then you will need to add the appropriate Conda channels for the first time: conda config --add channels defaults conda config --add channels conda-forge conda config --add channels bioconda Installing quasitools with Conda: conda install quasitools If everything was successful, you should be able to verify your installation by running quasitools --help and see quasitool's help message.","title":"Conda"},{"location":"installation/#galaxy","text":"When installing quasitools into an instance of Galaxy, please install quasitools from the main Galaxy toolshed .","title":"Galaxy"},{"location":"legal/","text":"Legal Copyright Government of Canada 2017-2018 Written by: National Microbiology Laboratory, Public Health Agency of Canada Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this work except in compliance with the License. You may obtain a copy of the License at: http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"Legal"},{"location":"legal/#legal","text":"Copyright Government of Canada 2017-2018 Written by: National Microbiology Laboratory, Public Health Agency of Canada Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this work except in compliance with the License. You may obtain a copy of the License at: http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"Legal"},{"location":"ntvar/","text":"ntvar Calls nucleotide variants observed witin an aligned BAM file when compared against a supplied reference file. Basic Usage quasitools ntvar [options] BAM file reference file Arguments BAM File A BAM file (.bam) of sequences aligned to a related reference. A BAM index file (.bai) is also required and should be named the same as the BAM file, with the extension instead changed from \".bam\" to \".bai\". Reference File A reference file related to the aligned BAM sequences. The provided reference file must be the same reference file used when producing the BAM and BAM index files. Options Error Rate -e, --error_rate FLOAT This is the expected substitution sequencing error rate. The default value is 0.0021 substitutions per sequenced base. Output -o, --output FILENAME The file output location to write the identified nucleotide variants in VCF format. Otherwise, the results are printed to standard output. Output The output of the tool is a list of the variants observed witin the aligned BAM file when compared against the supplied reference file. The output is in VCF format and the quasitools provides the following additional information in the FILTER and INFO columns of the VCF file. Please see Data Formats for more information about the custom fields used by quasitools. However, a short description is provided below. FILTER Name Meaning dp100 This variant was filtered because the coverage depth was less than 100. q30 This variant was filtered because the quality of the variant was less than 30. ac5 This variant was filtered because the variant was observed less than 5 times. INFO Name Meaning DP The total coverage depth of the pileup at this position. AC The number of times this particular variants was observed in the pileup at this position. AF The frequency of this particular variants was observed in the pileup at this position. Example Data The following example data may be used to run the tool: hiv.fasta variant.bam variant.bai Command quasitools call ntvar variant.bam hiv.fasta Output ##fileformat=VCFv4.2 ##fileDate=20190206 ##source=quasitools ##contig= ID=AF033819.3,length=9181 ##INFO= ID=DP,Number=1,Type=Integer,Description= Total Depth ##INFO= ID=AC,Number=A,Type=Integer,Description= Allele Count ##INFO= ID=AF,Number=A,Type=Float,Description= Allele Frequency ##FILTER= ID=dp100,Description= Set if True; DP 100 ##FILTER= ID=q30,Description= Set if True; QUAL 30 ##FILTER= ID=ac5,Description= Set if True; AC 5 #CHROM POS ID REF ALT QUAL FILTER INFO AF033819.3 153 . t a 100 PASS DP=129;AC=129;AF=1.0000 AF033819.3 342 . g c 100 PASS DP=141;AC=141;AF=1.0000 AF033819.3 719 . c g 100 PASS DP=132;AC=132;AF=1.0000 AF033819.3 1025 . a t 100 PASS DP=129;AC=129;AF=1.0000 AF033819.3 1351 . c a 100 PASS DP=135;AC=135;AF=1.0000 AF033819.3 1657 . a c 100 PASS DP=111;AC=111;AF=1.0000 AF033819.3 1917 . g a 100 PASS DP=128;AC=128;AF=1.0000 AF033819.3 2052 . t g 100 PASS DP=147;AC=147;AF=1.0000 AF033819.3 2368 . a t 100 PASS DP=140;AC=140;AF=1.0000 AF033819.3 2422 . g c 100 PASS DP=146;AC=146;AF=1.0000 AF033819.3 2989 . a g 100 PASS DP=108;AC=108;AF=1.0000 AF033819.3 5707 . t a 100 PASS DP=119;AC=119;AF=1.0000 AF033819.3 5970 . a c 100 PASS DP=117;AC=117;AF=1.0000 AF033819.3 6139 . c g 100 PASS DP=138;AC=138;AF=1.0000 AF033819.3 6674 . a t 100 PASS DP=142;AC=142;AF=1.0000 AF033819.3 7366 . a c 100 PASS DP=129;AC=129;AF=1.0000 AF033819.3 8631 . c t 100 PASS DP=144;AC=144;AF=1.0000","title":"call ntvar"},{"location":"ntvar/#ntvar","text":"Calls nucleotide variants observed witin an aligned BAM file when compared against a supplied reference file.","title":"ntvar"},{"location":"ntvar/#basic-usage","text":"quasitools ntvar [options] BAM file reference file","title":"Basic Usage"},{"location":"ntvar/#arguments","text":"","title":"Arguments"},{"location":"ntvar/#bam-file","text":"A BAM file (.bam) of sequences aligned to a related reference. A BAM index file (.bai) is also required and should be named the same as the BAM file, with the extension instead changed from \".bam\" to \".bai\".","title":"BAM File"},{"location":"ntvar/#reference-file","text":"A reference file related to the aligned BAM sequences. The provided reference file must be the same reference file used when producing the BAM and BAM index files.","title":"Reference File"},{"location":"ntvar/#options","text":"","title":"Options"},{"location":"ntvar/#error-rate","text":"-e, --error_rate FLOAT This is the expected substitution sequencing error rate. The default value is 0.0021 substitutions per sequenced base.","title":"Error Rate"},{"location":"ntvar/#output","text":"-o, --output FILENAME The file output location to write the identified nucleotide variants in VCF format. Otherwise, the results are printed to standard output.","title":"Output"},{"location":"ntvar/#output_1","text":"The output of the tool is a list of the variants observed witin the aligned BAM file when compared against the supplied reference file. The output is in VCF format and the quasitools provides the following additional information in the FILTER and INFO columns of the VCF file. Please see Data Formats for more information about the custom fields used by quasitools. However, a short description is provided below.","title":"Output"},{"location":"ntvar/#filter","text":"Name Meaning dp100 This variant was filtered because the coverage depth was less than 100. q30 This variant was filtered because the quality of the variant was less than 30. ac5 This variant was filtered because the variant was observed less than 5 times.","title":"FILTER"},{"location":"ntvar/#info","text":"Name Meaning DP The total coverage depth of the pileup at this position. AC The number of times this particular variants was observed in the pileup at this position. AF The frequency of this particular variants was observed in the pileup at this position.","title":"INFO"},{"location":"ntvar/#example","text":"","title":"Example"},{"location":"ntvar/#data","text":"The following example data may be used to run the tool: hiv.fasta variant.bam variant.bai","title":"Data"},{"location":"ntvar/#command","text":"quasitools call ntvar variant.bam hiv.fasta","title":"Command"},{"location":"ntvar/#output_2","text":"##fileformat=VCFv4.2 ##fileDate=20190206 ##source=quasitools ##contig= ID=AF033819.3,length=9181 ##INFO= ID=DP,Number=1,Type=Integer,Description= Total Depth ##INFO= ID=AC,Number=A,Type=Integer,Description= Allele Count ##INFO= ID=AF,Number=A,Type=Float,Description= Allele Frequency ##FILTER= ID=dp100,Description= Set if True; DP 100 ##FILTER= ID=q30,Description= Set if True; QUAL 30 ##FILTER= ID=ac5,Description= Set if True; AC 5 #CHROM POS ID REF ALT QUAL FILTER INFO AF033819.3 153 . t a 100 PASS DP=129;AC=129;AF=1.0000 AF033819.3 342 . g c 100 PASS DP=141;AC=141;AF=1.0000 AF033819.3 719 . c g 100 PASS DP=132;AC=132;AF=1.0000 AF033819.3 1025 . a t 100 PASS DP=129;AC=129;AF=1.0000 AF033819.3 1351 . c a 100 PASS DP=135;AC=135;AF=1.0000 AF033819.3 1657 . a c 100 PASS DP=111;AC=111;AF=1.0000 AF033819.3 1917 . g a 100 PASS DP=128;AC=128;AF=1.0000 AF033819.3 2052 . t g 100 PASS DP=147;AC=147;AF=1.0000 AF033819.3 2368 . a t 100 PASS DP=140;AC=140;AF=1.0000 AF033819.3 2422 . g c 100 PASS DP=146;AC=146;AF=1.0000 AF033819.3 2989 . a g 100 PASS DP=108;AC=108;AF=1.0000 AF033819.3 5707 . t a 100 PASS DP=119;AC=119;AF=1.0000 AF033819.3 5970 . a c 100 PASS DP=117;AC=117;AF=1.0000 AF033819.3 6139 . c g 100 PASS DP=138;AC=138;AF=1.0000 AF033819.3 6674 . a t 100 PASS DP=142;AC=142;AF=1.0000 AF033819.3 7366 . a c 100 PASS DP=129;AC=129;AF=1.0000 AF033819.3 8631 . c t 100 PASS DP=144;AC=144;AF=1.0000","title":"Output"},{"location":"quality/","text":"Quality Performs quality control measures of FASTQ reads and outputs filtered FASTQ reads. The tool may filter reads based on average quality score, median quality score, mask low quality bases, perform iterative read trimming, and filter based on read length. Basic Usage quasitools quality [options] FASTQ forward [ FASTQ reverse ] -o output directory Arguments FASTQ Forward The forward or single-end FASTQ-format reads to be correted. FASTQ Reverse The reverse reads, associated with paired-end data, to be corrected. This argument is not used if the tool is provided with only single-end reads. Options Output Directory -o, --output_dir DIRECTORY The location of the output directory. Trim Reads -tr, --trim_reads If enabled, the software will iteratively trim the ends of reads until they either meet filter values or become to short. If trimmed reads become too short, they will be discarded. If this option is disabled, the software will instead discard reads that do not meet filter values. Mask Reads -mr, --mask_reads This option will mask low quality regions with \"N\" if they are below the minimum read quality threshold. This option and N-filtering (--ns) cannot be enabled simultaneously. Minimum Read Quality -rq, --min_read_qual INTEGER Applies when read masking is enabled. The minimum quality for positions in the read before becoming masked with an \"N\". Length Cutoff -lc, --length_cutoff INTEGER Filters out any reads shorter than this length. Score Cutoff -sc, --score_cutoff INTEGER This software will filter out reads that have a median (default) or mean score less than this value. Median or Mean Score Filtering -me, --median / -mn, --mean This determines whether the software will use median (default) or mean score as a cutoff for read filtering. Filtering Ns -n, --ns If enabled, the software will discard any reads that contain N characters. Help --help Displays the help message and exits. Output The filtered reads will be writen to the output directory. Applications Read quality control before other performing other analyses. Example This example masks all positions with quality scores less than 30 as Ns. Data reads.fastq Command quasitools quality -mr -rq 30 reads.fastq -o output Output @AF033819.3-1820 AACAAACTTGGCNATGAAAGCAACACTTTTTACAATANCAATTGGTACAAGCAGTNTTAGGCNGACNTCCTNGNTGCTTNNAGGGCTCTAGTCTAGNANC + CCCFFAFFHHHF)IGCFIFJIJIJIJJIIE@HBJGIJ(IIHCJHIBIJIJIBHDA/CJGI@H=DFE3EDE@'G;DCA?D0:AADDCDDCADDEDDC9E+D @AF033819.3-1819 TAATAAGACGNTCAATGNAACAGGACCATGTACAAANGTNAGCACAGTANAATGTACACATGGNATTAGGCCAGTAGTANCANCTCNNCTNCTGTTAANN + ?@CFFFBBHF2DDIJJG JJJIJJEJJIGFJHIIJB=@G)GGBIJ@G?C6JJHJHIHC@JFJC-DC@EDDDHIEDDFFF:HE(DDD DB(BABCDDD ( @AF033819.3-1818 TAATNCNGACGCTCTCGGANCCATCTCNCTCCTTCTNGCCNNCGCNAGTCAAAATTTTTGNCGTACTCACNAGTNNCCNCCNCTCGCCTCTTGCCGTGNG + @C?F1B;DHGGHGGJIIGI JJIBGIG JIJCGJIG3JJJ; GHG*JJDFJJAG?GJGHI8CJE@HJADF2DFD(;CH9EA9DCDEEDCCBCDBDEFD C @AF033819.3-1817 CNGCCATTGTCANTATGTATTGTTTTTANTGGCCATNNTCCNGCTAATTTTAAAAGAAAATATGCTGTTTCCNNCCCTNTTTNTGCTGNAATNACTTCTN + C=?FDFDDHDHB0@JJIEJICDIHJDIF1IFJIGJJ):?IE IFCHDIIJ@J@JCJJJ?JDEIJIFIHGJCJ95B?CD,@D?2DFBDE;DEC DCEBBD3 (output truncated)","title":"quality"},{"location":"quality/#quality","text":"Performs quality control measures of FASTQ reads and outputs filtered FASTQ reads. The tool may filter reads based on average quality score, median quality score, mask low quality bases, perform iterative read trimming, and filter based on read length.","title":"Quality"},{"location":"quality/#basic-usage","text":"quasitools quality [options] FASTQ forward [ FASTQ reverse ] -o output directory","title":"Basic Usage"},{"location":"quality/#arguments","text":"","title":"Arguments"},{"location":"quality/#fastq-forward","text":"The forward or single-end FASTQ-format reads to be correted.","title":"FASTQ Forward"},{"location":"quality/#fastq-reverse","text":"The reverse reads, associated with paired-end data, to be corrected. This argument is not used if the tool is provided with only single-end reads.","title":"FASTQ Reverse"},{"location":"quality/#options","text":"","title":"Options"},{"location":"quality/#output-directory","text":"-o, --output_dir DIRECTORY The location of the output directory.","title":"Output Directory"},{"location":"quality/#trim-reads","text":"-tr, --trim_reads If enabled, the software will iteratively trim the ends of reads until they either meet filter values or become to short. If trimmed reads become too short, they will be discarded. If this option is disabled, the software will instead discard reads that do not meet filter values.","title":"Trim Reads"},{"location":"quality/#mask-reads","text":"-mr, --mask_reads This option will mask low quality regions with \"N\" if they are below the minimum read quality threshold. This option and N-filtering (--ns) cannot be enabled simultaneously.","title":"Mask Reads"},{"location":"quality/#minimum-read-quality","text":"-rq, --min_read_qual INTEGER Applies when read masking is enabled. The minimum quality for positions in the read before becoming masked with an \"N\".","title":"Minimum Read Quality"},{"location":"quality/#length-cutoff","text":"-lc, --length_cutoff INTEGER Filters out any reads shorter than this length.","title":"Length Cutoff"},{"location":"quality/#score-cutoff","text":"-sc, --score_cutoff INTEGER This software will filter out reads that have a median (default) or mean score less than this value.","title":"Score Cutoff"},{"location":"quality/#median-or-mean-score-filtering","text":"-me, --median / -mn, --mean This determines whether the software will use median (default) or mean score as a cutoff for read filtering.","title":"Median or Mean Score Filtering"},{"location":"quality/#filtering-ns","text":"-n, --ns If enabled, the software will discard any reads that contain N characters.","title":"Filtering Ns"},{"location":"quality/#help","text":"--help Displays the help message and exits.","title":"Help"},{"location":"quality/#output","text":"The filtered reads will be writen to the output directory.","title":"Output"},{"location":"quality/#applications","text":"Read quality control before other performing other analyses.","title":"Applications"},{"location":"quality/#example","text":"This example masks all positions with quality scores less than 30 as Ns.","title":"Example"},{"location":"quality/#data","text":"reads.fastq","title":"Data"},{"location":"quality/#command","text":"quasitools quality -mr -rq 30 reads.fastq -o output","title":"Command"},{"location":"quality/#output_1","text":"@AF033819.3-1820 AACAAACTTGGCNATGAAAGCAACACTTTTTACAATANCAATTGGTACAAGCAGTNTTAGGCNGACNTCCTNGNTGCTTNNAGGGCTCTAGTCTAGNANC + CCCFFAFFHHHF)IGCFIFJIJIJIJJIIE@HBJGIJ(IIHCJHIBIJIJIBHDA/CJGI@H=DFE3EDE@'G;DCA?D0:AADDCDDCADDEDDC9E+D @AF033819.3-1819 TAATAAGACGNTCAATGNAACAGGACCATGTACAAANGTNAGCACAGTANAATGTACACATGGNATTAGGCCAGTAGTANCANCTCNNCTNCTGTTAANN + ?@CFFFBBHF2DDIJJG JJJIJJEJJIGFJHIIJB=@G)GGBIJ@G?C6JJHJHIHC@JFJC-DC@EDDDHIEDDFFF:HE(DDD DB(BABCDDD ( @AF033819.3-1818 TAATNCNGACGCTCTCGGANCCATCTCNCTCCTTCTNGCCNNCGCNAGTCAAAATTTTTGNCGTACTCACNAGTNNCCNCCNCTCGCCTCTTGCCGTGNG + @C?F1B;DHGGHGGJIIGI JJIBGIG JIJCGJIG3JJJ; GHG*JJDFJJAG?GJGHI8CJE@HJADF2DFD(;CH9EA9DCDEEDCCBCDBDEFD C @AF033819.3-1817 CNGCCATTGTCANTATGTATTGTTTTTANTGGCCATNNTCCNGCTAATTTTAAAAGAAAATATGCTGTTTCCNNCCCTNTTTNTGCTGNAATNACTTCTN + C=?FDFDDHDHB0@JJIEJICDIHJDIF1IFJIGJJ):?IE IFCHDIIJ@J@JCJJJ?JDEIJIFIHGJCJ95B?CD,@D?2DFBDE;DEC DCEBBD3 (output truncated)","title":"Output"},{"location":"requirements/","text":"Requirements If quasitools is installed through Conda or Galaxy, then dependencies should be installed automatically. However, several tools within quasitools require BAM and BAM index files as input. These will need to be created using alignment software, such as Bowtie 2 to generate BAM alignment files and SAMTools to generate BAM index files. Please see the Data Formats resource for more information about how to prepare input to quasitools. HyDRA Pipeline When running quasitools directly from source, the HyDRA pipeline requires the follow dependencies: pysam = 0.8.1 SAMTools v1.3 Bowtie 2 v2.2.6","title":"Requirements"},{"location":"requirements/#requirements","text":"If quasitools is installed through Conda or Galaxy, then dependencies should be installed automatically. However, several tools within quasitools require BAM and BAM index files as input. These will need to be created using alignment software, such as Bowtie 2 to generate BAM alignment files and SAMTools to generate BAM index files. Please see the Data Formats resource for more information about how to prepare input to quasitools.","title":"Requirements"},{"location":"requirements/#hydra-pipeline","text":"When running quasitools directly from source, the HyDRA pipeline requires the follow dependencies: pysam = 0.8.1 SAMTools v1.3 Bowtie 2 v2.2.6","title":"HyDRA Pipeline"}]}